


(function () {

    var biswasm_initialize_function=null;
var Module=typeof Module!=="undefined"?Module:{};((function(){var bis_create_wasm_module=(function(callback,wasmname,binary,mode){mode=mode||"node.js";binary=binary||false;var Module={};Module["wasmMemory"]=new WebAssembly.Memory({"initial":256});Module["onRuntimeInitialized"]=(function(){const usingWasm=Module["usingWasm"]||false;callback(Module)});Module["wasmBinaryFile"]=wasmname||undefined;if(binary!==false){Module["wasmBinary"]=binary}var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module["arguments"]=[];Module["thisProgram"]="./this.program";Module["quit"]=(function(status,toThrow){throw toThrow});Module["preRun"]=[];Module["postRun"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module["ENVIRONMENT"]){if(Module["ENVIRONMENT"]==="WEB"){ENVIRONMENT_IS_WEB=true}else if(Module["ENVIRONMENT"]==="WORKER"){ENVIRONMENT_IS_WORKER=true}else if(Module["ENVIRONMENT"]==="NODE"){ENVIRONMENT_IS_NODE=true}else if(Module["ENVIRONMENT"]==="SHELL"){ENVIRONMENT_IS_SHELL=true}else{throw new Error("Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.")}}else{ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){var nodeFS;var nodePath;Module["read"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=console.log("fs");if(!nodePath)nodePath=console.log("path");filename=nodePath["normalize"](filename);ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process["on"]("unhandledRejection",(function(reason,p){process["exit"](1)}));Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){Module["read"]=function shell_read(f){return read(f)}}Module["readBinary"]=function readBinary(f){var data;if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof quit==="function"){Module["quit"]=(function(status,toThrow){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module["setWindowTitle"]=(function(title){document.title=title})}else{throw new Error("not compiled for this environment")}Module["print"]=typeof console!=="undefined"?console.log.bind(console):typeof print!=="undefined"?print:null;Module["printErr"]=typeof printErr!=="undefined"?printErr:typeof console!=="undefined"&&console.warn.bind(console)||Module["print"];Module.print=Module["print"];Module.printErr=Module["printErr"];for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){assert(!staticSealed);var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){assert(DYNAMICTOP_PTR);var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return 4}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;Module.printErr(text)}}var jsCallStartIndex=1;var functionPointers=new Array(0);var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args))}else{return Module["dynCall_"+sig].call(null,ptr)}}var GLOBAL_BASE=1024;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];assert(func,"Cannot call unknown function "+ident+", make sure it is exported");return func}var JSfuncs={"stackSave":(function(){stackSave()}),"stackRestore":(function(){stackRestore()}),"arrayToC":(function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};function ccall(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);else if(returnType==="boolean")ret=Boolean(ret);if(stack!==0){stackRestore(stack)}return ret}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}var ALLOC_STATIC=2;var ALLOC_NONE=4;function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function demangle(func){return func}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module["buffer"]=buffer=buf}function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}if(!Module["reallocBuffer"])Module["reallocBuffer"]=(function(size){var ret;try{if(ArrayBuffer.transfer){ret=ArrayBuffer.transfer(buffer,size)}else{var oldHEAP8=HEAP8;ret=new ArrayBuffer(size);var temp=new Int8Array(ret);temp.set(oldHEAP8)}}catch(e){return false}var success=_emscripten_replace_memory(ret);if(!success)return false;return ret});function enlargeMemory(){var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=Module["reallocBuffer"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)Module.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");if(Module["buffer"]){buffer=Module["buffer"]}else{if(typeof WebAssembly==="object"&&typeof WebAssembly.Memory==="function"){Module["wasmMemory"]=new WebAssembly.Memory({"initial":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module["wasmMemory"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module["buffer"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw"Runtime error: expected the system to be little-endian!";function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_round=Math.round;var Math_min=Math.min;var Math_max=Math.max;var Math_clz32=Math.clz32;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile="libbiswasm.wast";var wasmBinaryFile="libbiswasm.wasm";var asmjsCodeFile="libbiswasm.temp.asm.js";if(typeof Module["locateFile"]==="function"){if(!isDataURI(wasmTextFile)){wasmTextFile=Module["locateFile"](wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=Module["locateFile"](wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=Module["locateFile"](asmjsCodeFile)}}var wasmPageSize=64*1024;var info={"global":null,"env":null,"asm2wasm":{"f64-rem":(function(x,y){return x%y}),"debugger":(function(){debugger})},"parent":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module["buffer"];if(newBuffer.byteLength<oldBuffer.byteLength){Module["printErr"]("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function fixImports(imports){return imports}function getBinary(){try{if(Module["wasmBinary"]){return new Uint8Array(Module["wasmBinary"])}if(Module["readBinary"]){return Module["readBinary"](wasmBinaryFile)}else{throw"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module["wasmBinary"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!=="object"){Module["printErr"]("no native wasm support detected");return false}if(!(Module["wasmMemory"]instanceof WebAssembly.Memory)){Module["printErr"]("no native wasm Memory in use");return false}env["memory"]=Module["wasmMemory"];info["global"]={"NaN":NaN,"Infinity":Infinity};info["global.Math"]=Math;info["env"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module["asm"]=exports;Module["usingWasm"]=true;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){Module["printErr"]("Module.instantiateWasm callback failed with error: "+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output["instance"],output["module"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver).catch((function(reason){Module["printErr"]("failed to asynchronously prepare wasm: "+reason);abort(reason)}))}if(!Module["wasmBinary"]&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&typeof fetch==="function"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:"same-origin"}),info).then(receiveInstantiatedSource).catch((function(reason){Module["printErr"]("wasm streaming compile failed: "+reason);Module["printErr"]("falling back to ArrayBuffer instantiation");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module["asmPreload"]=Module["asm"];var asmjsReallocBuffer=Module["reallocBuffer"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module["buffer"];var oldSize=old.byteLength;if(Module["usingWasm"]){try{var result=Module["wasmMemory"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module["buffer"]=Module["wasmMemory"].buffer}else{return null}}catch(e){return null}}});Module["reallocBuffer"]=(function(size){if(finalMethod==="asmjs"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod="";Module["asm"]=(function(global,env,providedBuffer){env=fixImports(env);if(!env["table"]){var TABLE_SIZE=Module["wasmTableSize"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module["wasmMaxTableSize"];if(typeof WebAssembly==="object"&&typeof WebAssembly.Table==="function"){if(MAX_TABLE_SIZE!==undefined){env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,"maximum":MAX_TABLE_SIZE,"element":"anyfunc"})}else{env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,element:"anyfunc"})}}else{env["table"]=new Array(TABLE_SIZE)}Module["wasmTable"]=env["table"]}if(!env["memoryBase"]){env["memoryBase"]=Module["STATIC_BASE"]}if(!env["tableBase"]){env["tableBase"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);assert(exports,"no binaryen method succeeded.");return exports});}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+50048;__ATINIT__.push({func:(function(){__GLOBAL__I_000101()})},{func:(function(){__GLOBAL__sub_I_bisMemoryManagement_cpp()})},{func:(function(){__GLOBAL__sub_I_bisObject_cpp()})},{func:(function(){__GLOBAL__sub_I_iostream_cpp()})});var STATIC_BUMP=50048;Module["STATIC_BASE"]=STATIC_BASE;Module["STATIC_BUMP"]=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;function ___assert_fail(condition,filename,line,func){abort("Assertion failed: "+Pointer_stringify(condition)+", at: "+[filename?Pointer_stringify(filename):"unknown filename",line,func?Pointer_stringify(func):"unknown function"])}function ___cxa_allocate_exception(size){return _malloc(size)}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module["dynCall_vi"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___cxa_begin_catch(ptr){var info=EXCEPTIONS.infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exception--}if(info)info.rethrown=false;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!"}function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(setTempRet0(0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(setTempRet0(0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module["___cxa_is_pointer_type"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module["___cxa_can_catch"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(setTempRet0(typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(setTempRet0(throwntype),thrown)|0}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:ptr,type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_uncaught_exception(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}function ___gxx_personality_v0(){}function ___lock(){}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}function ___map_file(pathname,size){___setErrNo(ERRNO_CODES.EPERM);return-1}var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};var PATH={splitPath:(function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))}),join2:(function(l,r){return PATH.normalize(l+"/"+r)}),resolve:(function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter((function(p){return!!p})),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!="win32";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,"/",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if(typeof window==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback("Unable to connect to IndexedDB")}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}catch(e){return callback(e)}}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error("node type not supported"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process["binding"]("constants");if(flags["fs"]){flags=flags["fs"]}NODEFS.flagsForNodeMap={"1024":flags["O_APPEND"],"64":flags["O_CREAT"],"128":flags["O_EXCL"],"0":flags["O_RDONLY"],"2":flags["O_RDWR"],"4096":flags["O_SYNC"],"512":flags["O_TRUNC"],"1":flags["O_WRONLY"]}}),bufferFrom:(function(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsForNode:(function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),write:(function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,"/",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split("/");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join("/");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split("/");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts["files"]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts["blobs"]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj["name"]),base(obj["name"]),WORKERFS.FILE_MODE,0,obj["data"])}));(mount.opts["packages"]||[]).forEach((function(pack){pack["metadata"].files.forEach((function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack["blob"].slice(file.start,file.end))}))}));return root}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags}),flagsToPermissionString:(function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,"wx")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdirTree:(function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw e}}}),mkdev:(function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;Module["printErr"]("read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream}),close:(function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null}),isClosed:(function(stream){return stream.fd===null}),llseek:(function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")}),createDefaultDevices:(function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto!=="undefined"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return console.log("crypto")["randomBytes"](1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")}),createSpecialDirectories:(function(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:(function(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:(function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:(function(){return stream.path})}};ret.parent=ret;return ret})};return node})},{},"/proc/self/fd")}),createStandardStreams:(function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");assert(stdin.fd===0,"invalid handle for stdin ("+stdin.fd+")");var stdout=FS.open("/dev/stdout","w");assert(stdout.fd===1,"invalid handle for stdout ("+stdout.fd+")");var stderr=FS.open("/dev/stderr","w");assert(stderr.fd===2,"invalid handle for stderr ("+stderr.fd+")")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack)Object.defineProperty(this,"stack",{value:(new Error).stack,writable:true})};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS,"IDBFS":IDBFS,"NODEFS":NODEFS,"WORKERFS":WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return this.contents.length})}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach((function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return"EM_FS_"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path}),doStat:(function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return 0}),doMsync:(function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}),doMknod:(function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0}),doDup:(function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}),doWritev:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),getStreamFromFD:(function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream}),getSocketFromFD:(function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket}),getSocketAddress:(function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0};case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)};case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21524:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};default:abort("bad ioctl syscall "+op)}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall91(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get();var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);SYSCALLS.doMsync(addr,stream,len,info.flags);FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function _abort(){Module["abort"]()}function _difftime(time1,time0){return time1-time0}var _environ=STATICTOP;STATICTOP+=16;function ___buildEnvironment(env){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV["USER"]=ENV["LOGNAME"]="web_user";ENV["PATH"]="/";ENV["PWD"]="/";ENV["HOME"]="/home/web_user";ENV["LANG"]="C.UTF-8";ENV["_"]=Module["thisProgram"];poolPtr=staticAlloc(TOTAL_ENV_SIZE);envPtr=staticAlloc(MAX_ENV_VALUES*4);HEAP32[envPtr>>2]=poolPtr;HEAP32[_environ>>2]=envPtr}else{envPtr=HEAP32[_environ>>2];poolPtr=HEAP32[envPtr>>2]}var strings=[];var totalSize=0;for(var key in env){if(typeof env[key]==="string"){var line=key+"="+env[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error("Environment size exceeded TOTAL_ENV_SIZE!")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);HEAP32[envPtr+i*ptrSize>>2]=poolPtr;poolPtr+=line.length+1}HEAP32[envPtr+strings.length*ptrSize>>2]=0}var ENV={};function _getenv(name){if(name===0)return 0;name=Pointer_stringify(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _llvm_bswap_i64(l,h){var retl=_llvm_bswap_i32(h)>>>0;var reth=_llvm_bswap_i32(l)>>>0;return(setTempRet0(reth),retl)|0}var _llvm_fabs_f32=Math_abs;var _llvm_fabs_f64=Math_abs;function _llvm_stackrestore(p){var self=_llvm_stacksave;var ret=self.LLVM_SAVEDSTACKS[p];self.LLVM_SAVEDSTACKS.splice(p,1);stackRestore(ret)}function _llvm_stacksave(){var self=_llvm_stacksave;if(!self.LLVM_SAVEDSTACKS){self.LLVM_SAVEDSTACKS=[]}self.LLVM_SAVEDSTACKS.push(stackSave());return self.LLVM_SAVEDSTACKS.length-1}function _llvm_trap(){abort("trap!")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}function _pthread_cond_wait(){return 0}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module["dynCall_v"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?Pointer_stringify(tm_zone):""};var pattern=Pointer_stringify(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={"%a":(function(date){return WEEKDAYS[date.tm_wday].substring(0,3)}),"%A":(function(date){return WEEKDAYS[date.tm_wday]}),"%b":(function(date){return MONTHS[date.tm_mon].substring(0,3)}),"%B":(function(date){return MONTHS[date.tm_mon]}),"%C":(function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)}),"%d":(function(date){return leadingNulls(date.tm_mday,2)}),"%e":(function(date){return leadingSomething(date.tm_mday,2," ")}),"%g":(function(date){return getWeekBasedYear(date).toString().substring(2)}),"%G":(function(date){return getWeekBasedYear(date)}),"%H":(function(date){return leadingNulls(date.tm_hour,2)}),"%I":(function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)}),"%j":(function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)}),"%m":(function(date){return leadingNulls(date.tm_mon+1,2)}),"%M":(function(date){return leadingNulls(date.tm_min,2)}),"%n":(function(){return"\n"}),"%p":(function(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}else{return"PM"}}),"%S":(function(date){return leadingNulls(date.tm_sec,2)}),"%t":(function(){return"\t"}),"%u":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7}),"%U":(function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?"01":"00"}),"%V":(function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)}),"%w":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()}),"%W":(function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?"01":"00"}),"%y":(function(date){return(date.tm_year+1900).toString().substring(2)}),"%Y":(function(date){return date.tm_year+1900}),"%z":(function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)}),"%Z":(function(date){return date.tm_zone}),"%%":(function(){return"%"})};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}FS.staticInit();__ATINIT__.unshift((function(){if(!Module["noFSInit"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=console.log("fs");var NODEJS_PATH=console.log("path");NODEFS.staticInit()}___buildEnvironment(ENV);DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["wasmTableSize"]=876;Module["wasmMaxTableSize"]=876;function invoke_diiiii(index,a1,a2,a3,a4,a5){try{return Module["dynCall_diiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_diiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_diiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_fi(index,a1){try{return Module["dynCall_fi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_fii(index,a1,a2){try{return Module["dynCall_fii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_fiii(index,a1,a2,a3){try{return Module["dynCall_fiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_fiiifiifi(index,a1,a2,a3,a4,a5,a6,a7,a8){try{return Module["dynCall_fiiifiifi"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_fiiii(index,a1,a2,a3,a4){try{return Module["dynCall_fiiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iifi(index,a1,a2,a3){try{return Module["dynCall_iifi"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iii(index,a1,a2){try{return Module["dynCall_iii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){try{return Module["dynCall_iiiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiid(index,a1,a2,a3,a4,a5){try{return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){try{return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){try{return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){try{return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiij(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_iiiiij"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_v(index){try{Module["dynCall_v"](index)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_vii(index,a1,a2){try{Module["dynCall_vii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viii(index,a1,a2,a3){try{Module["dynCall_viii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){try{Module["dynCall_viiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viijii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viijii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}Module.asmGlobalArg={};Module.asmLibraryArg={"abort":abort,"assert":assert,"enlargeMemory":enlargeMemory,"getTotalMemory":getTotalMemory,"abortOnCannotGrowMemory":abortOnCannotGrowMemory,"invoke_diiiii":invoke_diiiii,"invoke_diiiiii":invoke_diiiiii,"invoke_fi":invoke_fi,"invoke_fii":invoke_fii,"invoke_fiii":invoke_fiii,"invoke_fiiifiifi":invoke_fiiifiifi,"invoke_fiiii":invoke_fiiii,"invoke_ii":invoke_ii,"invoke_iifi":invoke_iifi,"invoke_iii":invoke_iii,"invoke_iiii":invoke_iiii,"invoke_iiiii":invoke_iiiii,"invoke_iiiiid":invoke_iiiiid,"invoke_iiiiii":invoke_iiiiii,"invoke_iiiiiid":invoke_iiiiiid,"invoke_iiiiiii":invoke_iiiiiii,"invoke_iiiiiiii":invoke_iiiiiiii,"invoke_iiiiiiiii":invoke_iiiiiiiii,"invoke_iiiiij":invoke_iiiiij,"invoke_v":invoke_v,"invoke_vi":invoke_vi,"invoke_vii":invoke_vii,"invoke_viii":invoke_viii,"invoke_viiii":invoke_viiii,"invoke_viiiii":invoke_viiiii,"invoke_viiiiii":invoke_viiiiii,"invoke_viijii":invoke_viijii,"___assert_fail":___assert_fail,"___buildEnvironment":___buildEnvironment,"___cxa_allocate_exception":___cxa_allocate_exception,"___cxa_begin_catch":___cxa_begin_catch,"___cxa_find_matching_catch":___cxa_find_matching_catch,"___cxa_pure_virtual":___cxa_pure_virtual,"___cxa_throw":___cxa_throw,"___cxa_uncaught_exception":___cxa_uncaught_exception,"___gxx_personality_v0":___gxx_personality_v0,"___lock":___lock,"___map_file":___map_file,"___resumeException":___resumeException,"___setErrNo":___setErrNo,"___syscall140":___syscall140,"___syscall145":___syscall145,"___syscall146":___syscall146,"___syscall54":___syscall54,"___syscall6":___syscall6,"___syscall91":___syscall91,"___unlock":___unlock,"__addDays":__addDays,"__arraySum":__arraySum,"__isLeapYear":__isLeapYear,"_abort":_abort,"_difftime":_difftime,"_emscripten_memcpy_big":_emscripten_memcpy_big,"_getenv":_getenv,"_llvm_bswap_i64":_llvm_bswap_i64,"_llvm_fabs_f32":_llvm_fabs_f32,"_llvm_fabs_f64":_llvm_fabs_f64,"_llvm_stackrestore":_llvm_stackrestore,"_llvm_stacksave":_llvm_stacksave,"_llvm_trap":_llvm_trap,"_pthread_cond_wait":_pthread_cond_wait,"_pthread_getspecific":_pthread_getspecific,"_pthread_key_create":_pthread_key_create,"_pthread_once":_pthread_once,"_pthread_setspecific":_pthread_setspecific,"_strftime":_strftime,"_strftime_l":_strftime_l,"_time":_time,"DYNAMICTOP_PTR":DYNAMICTOP_PTR,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX};var asm=Module["asm"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module["asm"]=asm;var __GLOBAL__I_000101=Module["__GLOBAL__I_000101"]=(function(){return Module["asm"]["__GLOBAL__I_000101"].apply(null,arguments)});var __GLOBAL__sub_I_bisMemoryManagement_cpp=Module["__GLOBAL__sub_I_bisMemoryManagement_cpp"]=(function(){return Module["asm"]["__GLOBAL__sub_I_bisMemoryManagement_cpp"].apply(null,arguments)});var __GLOBAL__sub_I_bisObject_cpp=Module["__GLOBAL__sub_I_bisObject_cpp"]=(function(){return Module["asm"]["__GLOBAL__sub_I_bisObject_cpp"].apply(null,arguments)});var __GLOBAL__sub_I_iostream_cpp=Module["__GLOBAL__sub_I_iostream_cpp"]=(function(){return Module["asm"]["__GLOBAL__sub_I_iostream_cpp"].apply(null,arguments)});var __ZSt18uncaught_exceptionv=Module["__ZSt18uncaught_exceptionv"]=(function(){return Module["asm"]["__ZSt18uncaught_exceptionv"].apply(null,arguments)});var ___cxa_can_catch=Module["___cxa_can_catch"]=(function(){return Module["asm"]["___cxa_can_catch"].apply(null,arguments)});var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=(function(){return Module["asm"]["___cxa_is_pointer_type"].apply(null,arguments)});var ___errno_location=Module["___errno_location"]=(function(){return Module["asm"]["___errno_location"].apply(null,arguments)});var _addGridToImageWASM=Module["_addGridToImageWASM"]=(function(){return Module["asm"]["_addGridToImageWASM"].apply(null,arguments)});var _allocate_js_array=Module["_allocate_js_array"]=(function(){return Module["asm"]["_allocate_js_array"].apply(null,arguments)});var _approximateDisplacementFieldWASM=Module["_approximateDisplacementFieldWASM"]=(function(){return Module["asm"]["_approximateDisplacementFieldWASM"].apply(null,arguments)});var _approximateDisplacementFieldWASM2=Module["_approximateDisplacementFieldWASM2"]=(function(){return Module["asm"]["_approximateDisplacementFieldWASM2"].apply(null,arguments)});var _backProjectImageWASM=Module["_backProjectImageWASM"]=(function(){return Module["asm"]["_backProjectImageWASM"].apply(null,arguments)});var _blankImageWASM=Module["_blankImageWASM"]=(function(){return Module["asm"]["_blankImageWASM"].apply(null,arguments)});var _butterworthFilterImageWASM=Module["_butterworthFilterImageWASM"]=(function(){return Module["asm"]["_butterworthFilterImageWASM"].apply(null,arguments)});var _butterworthFilterWASM=Module["_butterworthFilterWASM"]=(function(){return Module["asm"]["_butterworthFilterWASM"].apply(null,arguments)});var _clusterThresholdImageWASM=Module["_clusterThresholdImageWASM"]=(function(){return Module["asm"]["_clusterThresholdImageWASM"].apply(null,arguments)});var _computeCorrelationMatrixWASM=Module["_computeCorrelationMatrixWASM"]=(function(){return Module["asm"]["_computeCorrelationMatrixWASM"].apply(null,arguments)});var _computeDTIColorMapImageWASM=Module["_computeDTIColorMapImageWASM"]=(function(){return Module["asm"]["_computeDTIColorMapImageWASM"].apply(null,arguments)});var _computeDTITensorFitWASM=Module["_computeDTITensorFitWASM"]=(function(){return Module["asm"]["_computeDTITensorFitWASM"].apply(null,arguments)});var _computeDTITensorInvariantsWASM=Module["_computeDTITensorInvariantsWASM"]=(function(){return Module["asm"]["_computeDTITensorInvariantsWASM"].apply(null,arguments)});var _computeDisplacementFieldWASM=Module["_computeDisplacementFieldWASM"]=(function(){return Module["asm"]["_computeDisplacementFieldWASM"].apply(null,arguments)});var _computeGLMWASM=Module["_computeGLMWASM"]=(function(){return Module["asm"]["_computeGLMWASM"].apply(null,arguments)});var _computeROIWASM=Module["_computeROIWASM"]=(function(){return Module["asm"]["_computeROIWASM"].apply(null,arguments)});var _createComboTransformationTextFileWASM=Module["_createComboTransformationTextFileWASM"]=(function(){return Module["asm"]["_createComboTransformationTextFileWASM"].apply(null,arguments)});var _createMatrixTextFileWASM=Module["_createMatrixTextFileWASM"]=(function(){return Module["asm"]["_createMatrixTextFileWASM"].apply(null,arguments)});var _cropImageWASM=Module["_cropImageWASM"]=(function(){return Module["asm"]["_cropImageWASM"].apply(null,arguments)});var _delete_all_memory=Module["_delete_all_memory"]=(function(){return Module["asm"]["_delete_all_memory"].apply(null,arguments)});var _emscripten_replace_memory=Module["_emscripten_replace_memory"]=(function(){return Module["asm"]["_emscripten_replace_memory"].apply(null,arguments)});var _extractImageFrameWASM=Module["_extractImageFrameWASM"]=(function(){return Module["asm"]["_extractImageFrameWASM"].apply(null,arguments)});var _extractImageSliceWASM=Module["_extractImageSliceWASM"]=(function(){return Module["asm"]["_extractImageSliceWASM"].apply(null,arguments)});var _flipImageWASM=Module["_flipImageWASM"]=(function(){return Module["asm"]["_flipImageWASM"].apply(null,arguments)});var _free=Module["_free"]=(function(){return Module["asm"]["_free"].apply(null,arguments)});var _gaussianSmoothImageWASM=Module["_gaussianSmoothImageWASM"]=(function(){return Module["asm"]["_gaussianSmoothImageWASM"].apply(null,arguments)});var _getCollectionMagicCode=Module["_getCollectionMagicCode"]=(function(){return Module["asm"]["_getCollectionMagicCode"].apply(null,arguments)});var _getComboTransformMagicCode=Module["_getComboTransformMagicCode"]=(function(){return Module["asm"]["_getComboTransformMagicCode"].apply(null,arguments)});var _getGridTransformMagicCode=Module["_getGridTransformMagicCode"]=(function(){return Module["asm"]["_getGridTransformMagicCode"].apply(null,arguments)});var _getImageMagicCode=Module["_getImageMagicCode"]=(function(){return Module["asm"]["_getImageMagicCode"].apply(null,arguments)});var _getMatrixMagicCode=Module["_getMatrixMagicCode"]=(function(){return Module["asm"]["_getMatrixMagicCode"].apply(null,arguments)});var _getVectorMagicCode=Module["_getVectorMagicCode"]=(function(){return Module["asm"]["_getVectorMagicCode"].apply(null,arguments)});var _gradientImageWASM=Module["_gradientImageWASM"]=(function(){return Module["asm"]["_gradientImageWASM"].apply(null,arguments)});var _jsdel_array=Module["_jsdel_array"]=(function(){return Module["asm"]["_jsdel_array"].apply(null,arguments)});var _llvm_bswap_i32=Module["_llvm_bswap_i32"]=(function(){return Module["asm"]["_llvm_bswap_i32"].apply(null,arguments)});var _malloc=Module["_malloc"]=(function(){return Module["asm"]["_malloc"].apply(null,arguments)});var _memcpy=Module["_memcpy"]=(function(){return Module["asm"]["_memcpy"].apply(null,arguments)});var _memmove=Module["_memmove"]=(function(){return Module["asm"]["_memmove"].apply(null,arguments)});var _memset=Module["_memset"]=(function(){return Module["asm"]["_memset"].apply(null,arguments)});var _morphologyOperationWASM=Module["_morphologyOperationWASM"]=(function(){return Module["asm"]["_morphologyOperationWASM"].apply(null,arguments)});var _niftiMat44ToQuaternionWASM=Module["_niftiMat44ToQuaternionWASM"]=(function(){return Module["asm"]["_niftiMat44ToQuaternionWASM"].apply(null,arguments)});var _normalizeImageWASM=Module["_normalizeImageWASM"]=(function(){return Module["asm"]["_normalizeImageWASM"].apply(null,arguments)});var _parseComboTransformTextFileWASM=Module["_parseComboTransformTextFileWASM"]=(function(){return Module["asm"]["_parseComboTransformTextFileWASM"].apply(null,arguments)});var _parseMatlabV6WASM=Module["_parseMatlabV6WASM"]=(function(){return Module["asm"]["_parseMatlabV6WASM"].apply(null,arguments)});var _parseMatrixTextFileWASM=Module["_parseMatrixTextFileWASM"]=(function(){return Module["asm"]["_parseMatrixTextFileWASM"].apply(null,arguments)});var _prepareImageForRegistrationWASM=Module["_prepareImageForRegistrationWASM"]=(function(){return Module["asm"]["_prepareImageForRegistrationWASM"].apply(null,arguments)});var _print_memory=Module["_print_memory"]=(function(){return Module["asm"]["_print_memory"].apply(null,arguments)});var _projectImageWASM=Module["_projectImageWASM"]=(function(){return Module["asm"]["_projectImageWASM"].apply(null,arguments)});var _pthread_cond_broadcast=Module["_pthread_cond_broadcast"]=(function(){return Module["asm"]["_pthread_cond_broadcast"].apply(null,arguments)});var _pthread_mutex_lock=Module["_pthread_mutex_lock"]=(function(){return Module["asm"]["_pthread_mutex_lock"].apply(null,arguments)});var _pthread_mutex_unlock=Module["_pthread_mutex_unlock"]=(function(){return Module["asm"]["_pthread_mutex_unlock"].apply(null,arguments)});var _redirect_stdout=Module["_redirect_stdout"]=(function(){return Module["asm"]["_redirect_stdout"].apply(null,arguments)});var _regularizeObjectmapWASM=Module["_regularizeObjectmapWASM"]=(function(){return Module["asm"]["_regularizeObjectmapWASM"].apply(null,arguments)});var _resampleImageWASM=Module["_resampleImageWASM"]=(function(){return Module["asm"]["_resampleImageWASM"].apply(null,arguments)});var _resliceImageWASM=Module["_resliceImageWASM"]=(function(){return Module["asm"]["_resliceImageWASM"].apply(null,arguments)});var _runLinearRegistrationWASM=Module["_runLinearRegistrationWASM"]=(function(){return Module["asm"]["_runLinearRegistrationWASM"].apply(null,arguments)});var _runNonLinearRegistrationWASM=Module["_runNonLinearRegistrationWASM"]=(function(){return Module["asm"]["_runNonLinearRegistrationWASM"].apply(null,arguments)});var _sbrk=Module["_sbrk"]=(function(){return Module["asm"]["_sbrk"].apply(null,arguments)});var _seedConnectivityWASM=Module["_seedConnectivityWASM"]=(function(){return Module["asm"]["_seedConnectivityWASM"].apply(null,arguments)});var _segmentImageWASM=Module["_segmentImageWASM"]=(function(){return Module["asm"]["_segmentImageWASM"].apply(null,arguments)});var _set_debug_memory_mode=Module["_set_debug_memory_mode"]=(function(){return Module["asm"]["_set_debug_memory_mode"].apply(null,arguments)});var _shiftScaleImageWASM=Module["_shiftScaleImageWASM"]=(function(){return Module["asm"]["_shiftScaleImageWASM"].apply(null,arguments)});var _sliceBiasFieldCorrectImageWASM=Module["_sliceBiasFieldCorrectImageWASM"]=(function(){return Module["asm"]["_sliceBiasFieldCorrectImageWASM"].apply(null,arguments)});var _test_PTZConversions=Module["_test_PTZConversions"]=(function(){return Module["asm"]["_test_PTZConversions"].apply(null,arguments)});var _test_bendingEnergy=Module["_test_bendingEnergy"]=(function(){return Module["asm"]["_test_bendingEnergy"].apply(null,arguments)});var _test_compute_histo_metric=Module["_test_compute_histo_metric"]=(function(){return Module["asm"]["_test_compute_histo_metric"].apply(null,arguments)});var _test_create_4x4matrix=Module["_test_create_4x4matrix"]=(function(){return Module["asm"]["_test_create_4x4matrix"].apply(null,arguments)});var _test_eigenUtilOperations=Module["_test_eigenUtilOperations"]=(function(){return Module["asm"]["_test_eigenUtilOperations"].apply(null,arguments)});var _test_eigenUtils=Module["_test_eigenUtils"]=(function(){return Module["asm"]["_test_eigenUtils"].apply(null,arguments)});var _test_matlabParse=Module["_test_matlabParse"]=(function(){return Module["asm"]["_test_matlabParse"].apply(null,arguments)});var _test_matrix4x4=Module["_test_matrix4x4"]=(function(){return Module["asm"]["_test_matrix4x4"].apply(null,arguments)});var _test_mirrorComboTransformTextFileWASM=Module["_test_mirrorComboTransformTextFileWASM"]=(function(){return Module["asm"]["_test_mirrorComboTransformTextFileWASM"].apply(null,arguments)});var _test_optimizer=Module["_test_optimizer"]=(function(){return Module["asm"]["_test_optimizer"].apply(null,arguments)});var _test_wasm=Module["_test_wasm"]=(function(){return Module["asm"]["_test_wasm"].apply(null,arguments)});var _thresholdImageWASM=Module["_thresholdImageWASM"]=(function(){return Module["asm"]["_thresholdImageWASM"].apply(null,arguments)});var _uses_gpl=Module["_uses_gpl"]=(function(){return Module["asm"]["_uses_gpl"].apply(null,arguments)});var _weightedRegressGlobalSignalWASM=Module["_weightedRegressGlobalSignalWASM"]=(function(){return Module["asm"]["_weightedRegressGlobalSignalWASM"].apply(null,arguments)});var _weightedRegressOutWASM=Module["_weightedRegressOutWASM"]=(function(){return Module["asm"]["_weightedRegressOutWASM"].apply(null,arguments)});var establishStackSpace=Module["establishStackSpace"]=(function(){return Module["asm"]["establishStackSpace"].apply(null,arguments)});var getTempRet0=Module["getTempRet0"]=(function(){return Module["asm"]["getTempRet0"].apply(null,arguments)});var runPostSets=Module["runPostSets"]=(function(){return Module["asm"]["runPostSets"].apply(null,arguments)});var setTempRet0=Module["setTempRet0"]=(function(){return Module["asm"]["setTempRet0"].apply(null,arguments)});var setThrew=Module["setThrew"]=(function(){return Module["asm"]["setThrew"].apply(null,arguments)});var stackAlloc=Module["stackAlloc"]=(function(){return Module["asm"]["stackAlloc"].apply(null,arguments)});var stackRestore=Module["stackRestore"]=(function(){return Module["asm"]["stackRestore"].apply(null,arguments)});var stackSave=Module["stackSave"]=(function(){return Module["asm"]["stackSave"].apply(null,arguments)});var dynCall_diiiii=Module["dynCall_diiiii"]=(function(){return Module["asm"]["dynCall_diiiii"].apply(null,arguments)});var dynCall_diiiiii=Module["dynCall_diiiiii"]=(function(){return Module["asm"]["dynCall_diiiiii"].apply(null,arguments)});var dynCall_fi=Module["dynCall_fi"]=(function(){return Module["asm"]["dynCall_fi"].apply(null,arguments)});var dynCall_fii=Module["dynCall_fii"]=(function(){return Module["asm"]["dynCall_fii"].apply(null,arguments)});var dynCall_fiii=Module["dynCall_fiii"]=(function(){return Module["asm"]["dynCall_fiii"].apply(null,arguments)});var dynCall_fiiifiifi=Module["dynCall_fiiifiifi"]=(function(){return Module["asm"]["dynCall_fiiifiifi"].apply(null,arguments)});var dynCall_fiiii=Module["dynCall_fiiii"]=(function(){return Module["asm"]["dynCall_fiiii"].apply(null,arguments)});var dynCall_ii=Module["dynCall_ii"]=(function(){return Module["asm"]["dynCall_ii"].apply(null,arguments)});var dynCall_iifi=Module["dynCall_iifi"]=(function(){return Module["asm"]["dynCall_iifi"].apply(null,arguments)});var dynCall_iii=Module["dynCall_iii"]=(function(){return Module["asm"]["dynCall_iii"].apply(null,arguments)});var dynCall_iiii=Module["dynCall_iiii"]=(function(){return Module["asm"]["dynCall_iiii"].apply(null,arguments)});var dynCall_iiiii=Module["dynCall_iiiii"]=(function(){return Module["asm"]["dynCall_iiiii"].apply(null,arguments)});var dynCall_iiiiid=Module["dynCall_iiiiid"]=(function(){return Module["asm"]["dynCall_iiiiid"].apply(null,arguments)});var dynCall_iiiiii=Module["dynCall_iiiiii"]=(function(){return Module["asm"]["dynCall_iiiiii"].apply(null,arguments)});var dynCall_iiiiiid=Module["dynCall_iiiiiid"]=(function(){return Module["asm"]["dynCall_iiiiiid"].apply(null,arguments)});var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiii"].apply(null,arguments)});var dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiiii"].apply(null,arguments)});var dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiiiii"].apply(null,arguments)});var dynCall_iiiiij=Module["dynCall_iiiiij"]=(function(){return Module["asm"]["dynCall_iiiiij"].apply(null,arguments)});var dynCall_v=Module["dynCall_v"]=(function(){return Module["asm"]["dynCall_v"].apply(null,arguments)});var dynCall_vi=Module["dynCall_vi"]=(function(){return Module["asm"]["dynCall_vi"].apply(null,arguments)});var dynCall_vii=Module["dynCall_vii"]=(function(){return Module["asm"]["dynCall_vii"].apply(null,arguments)});var dynCall_viii=Module["dynCall_viii"]=(function(){return Module["asm"]["dynCall_viii"].apply(null,arguments)});var dynCall_viiii=Module["dynCall_viiii"]=(function(){return Module["asm"]["dynCall_viiii"].apply(null,arguments)});var dynCall_viiiii=Module["dynCall_viiiii"]=(function(){return Module["asm"]["dynCall_viiiii"].apply(null,arguments)});var dynCall_viiiiii=Module["dynCall_viiiiii"]=(function(){return Module["asm"]["dynCall_viiiiii"].apply(null,arguments)});var dynCall_viijii=Module["dynCall_viijii"]=(function(){return Module["asm"]["dynCall_viijii"].apply(null,arguments)});Module["asm"]=asm;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};function run(args){args=args||Module["arguments"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]&&status===0){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}if(ENVIRONMENT_IS_NODE){process["exit"](status)}Module["quit"](status,new ExitStatus(status))}Module["exit"]=exit;function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;throw"abort("+what+"). Build with -s ASSERTIONS=1 for more info."}Module["abort"]=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}Module["noExitRuntime"]=true;run();Module["ccall"]=ccall;return Module});var web_load=(function(callback,wasmname,binary){binary=binary||false;if(binary!==false)return bis_create_wasm_module(callback,wasmname,binary,"Browser");return bis_create_wasm_module(callback,"./libbiswasm.wasm",binary,"Browser")});var worker_load=(function(callback,wasmname,binary){binary=binary||false;if(binary!==false)return bis_create_wasm_module(callback,wasmname,binary,"WebWorker");return bis_create_wasm_module(callback,"./libbiswasm.wasm",binary,"WebWorker")});if(typeof WorkerGlobalScope!=="undefined"){biswasm_initialize_function=worker_load}else if(typeof window!=="undefined"){biswasm_initialize_function=web_load}else{biswasm_initialize_function=bis_create_wasm_module}}))();
    const bioimagesuitewasmpack= {
        binary: "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",
        date : "2019/01/29, 13:28:45",
        filename : "external js module: libbiswasm.js",
        initialize : biswasm_initialize_function,
    };

    if (typeof module !== "undefined" && module.exports) {
        module.exports = bioimagesuitewasmpack;
    } else {
        window.bioimagesuitewasmpack=bioimagesuitewasmpack;
    }
})();
