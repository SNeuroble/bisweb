


(function () {

    var biswasm_initialize_function=null;
var Module=typeof Module!=="undefined"?Module:{};((function(){var bis_create_wasm_module=(function(callback,wasmname,binary,mode){mode=mode||"node.js";binary=binary||false;var Module={};Module["wasmMemory"]=new WebAssembly.Memory({"initial":256});Module["onRuntimeInitialized"]=(function(){const usingWasm=Module["usingWasm"]||false;if(binary===false)console.log("==== \tModule loaded, ",mode," usingWasm="+usingWasm.toString()+" wasmname="+wasmname);else console.log("==== \tModule ready,",mode," usingWasm="+usingWasm.toString()+" preloaded from "+wasmname);callback(Module)});Module["wasmBinaryFile"]=wasmname||undefined;if(binary!==false){Module["wasmBinary"]=binary}var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module["arguments"]=[];Module["thisProgram"]="./this.program";Module["quit"]=(function(status,toThrow){throw toThrow});Module["preRun"]=[];Module["postRun"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;if(Module["ENVIRONMENT"]){if(Module["ENVIRONMENT"]==="WEB"){ENVIRONMENT_IS_WEB=true}else if(Module["ENVIRONMENT"]==="WORKER"){ENVIRONMENT_IS_WORKER=true}else if(Module["ENVIRONMENT"]==="NODE"){ENVIRONMENT_IS_NODE=true}else if(Module["ENVIRONMENT"]==="SHELL"){ENVIRONMENT_IS_SHELL=true}else{throw new Error("Module['ENVIRONMENT'] value is not valid. must be one of: WEB|WORKER|NODE|SHELL.")}}else{ENVIRONMENT_IS_WEB=typeof window==="object";ENVIRONMENT_IS_WORKER=typeof importScripts==="function";ENVIRONMENT_IS_NODE=typeof process==="object"&&typeof require==="function"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER}if(ENVIRONMENT_IS_NODE){var nodeFS;var nodePath;Module["read"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=console.log("fs");if(!nodePath)nodePath=console.log("path");filename=nodePath["normalize"](filename);ret=nodeFS["readFileSync"](filename);return binary?ret:ret.toString()};Module["readBinary"]=function readBinary(filename){var ret=Module["read"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process["argv"].length>1){Module["thisProgram"]=process["argv"][1].replace(/\\/g,"/")}Module["arguments"]=process["argv"].slice(2);if(typeof module!=="undefined"){module["exports"]=Module}process["on"]("uncaughtException",(function(ex){if(!(ex instanceof ExitStatus)){throw ex}}));process["on"]("unhandledRejection",(function(reason,p){process["exit"](1)}));Module["inspect"]=(function(){return"[Emscripten Module object]"})}else if(ENVIRONMENT_IS_SHELL){if(typeof read!="undefined"){Module["read"]=function shell_read(f){return read(f)}}Module["readBinary"]=function readBinary(f){var data;if(typeof readbuffer==="function"){return new Uint8Array(readbuffer(f))}data=read(f,"binary");assert(typeof data==="object");return data};if(typeof scriptArgs!="undefined"){Module["arguments"]=scriptArgs}else if(typeof arguments!="undefined"){Module["arguments"]=arguments}if(typeof quit==="function"){Module["quit"]=(function(status,toThrow){quit(status)})}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){Module["read"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module["readBinary"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)}}Module["readAsync"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module["setWindowTitle"]=(function(title){document.title=title})}Module["print"]=typeof console!=="undefined"?console.log.bind(console):typeof print!=="undefined"?print:null;Module["printErr"]=typeof printErr!=="undefined"?printErr:typeof console!=="undefined"&&console.warn.bind(console)||Module["print"];Module.print=Module["print"];Module.printErr=Module["printErr"];for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var STACK_ALIGN=16;function staticAlloc(size){assert(!staticSealed);var ret=STATICTOP;STATICTOP=STATICTOP+size+15&-16;return ret}function dynamicAlloc(size){assert(DYNAMICTOP_PTR);var ret=HEAP32[DYNAMICTOP_PTR>>2];var end=ret+size+15&-16;HEAP32[DYNAMICTOP_PTR>>2]=end;if(end>=TOTAL_MEMORY){var success=enlargeMemory();if(!success){HEAP32[DYNAMICTOP_PTR>>2]=ret;return 0}}return ret}function alignMemory(size,factor){if(!factor)factor=STACK_ALIGN;var ret=size=Math.ceil(size/factor)*factor;return ret}function getNativeTypeSize(type){switch(type){case"i1":case"i8":return 1;case"i16":return 2;case"i32":return 4;case"i64":return 8;case"float":return 4;case"double":return 8;default:{if(type[type.length-1]==="*"){return 4}else if(type[0]==="i"){var bits=parseInt(type.substr(1));assert(bits%8===0);return bits/8}else{return 0}}}}function warnOnce(text){if(!warnOnce.shown)warnOnce.shown={};if(!warnOnce.shown[text]){warnOnce.shown[text]=1;Module.printErr(text)}}var jsCallStartIndex=1;var functionPointers=new Array(0);var funcWrappers={};function dynCall(sig,ptr,args){if(args&&args.length){return Module["dynCall_"+sig].apply(null,[ptr].concat(args))}else{return Module["dynCall_"+sig].call(null,ptr)}}var GLOBAL_BASE=1024;var ABORT=0;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort("Assertion failed: "+text)}}function getCFunc(ident){var func=Module["_"+ident];assert(func,"Cannot call unknown function "+ident+", make sure it is exported");return func}var JSfuncs={"stackSave":(function(){stackSave()}),"stackRestore":(function(){stackRestore()}),"arrayToC":(function(arr){var ret=stackAlloc(arr.length);writeArrayToMemory(arr,ret);return ret}),"stringToC":(function(str){var ret=0;if(str!==null&&str!==undefined&&str!==0){var len=(str.length<<2)+1;ret=stackAlloc(len);stringToUTF8(str,ret,len)}return ret})};var toC={"string":JSfuncs["stringToC"],"array":JSfuncs["arrayToC"]};function ccall(ident,returnType,argTypes,args,opts){var func=getCFunc(ident);var cArgs=[];var stack=0;if(args){for(var i=0;i<args.length;i++){var converter=toC[argTypes[i]];if(converter){if(stack===0)stack=stackSave();cArgs[i]=converter(args[i])}else{cArgs[i]=args[i]}}}var ret=func.apply(null,cArgs);if(returnType==="string")ret=Pointer_stringify(ret);else if(returnType==="boolean")ret=Boolean(ret);if(stack!==0){stackRestore(stack)}return ret}function setValue(ptr,value,type,noSafe){type=type||"i8";if(type.charAt(type.length-1)==="*")type="i32";switch(type){case"i1":HEAP8[ptr>>0]=value;break;case"i8":HEAP8[ptr>>0]=value;break;case"i16":HEAP16[ptr>>1]=value;break;case"i32":HEAP32[ptr>>2]=value;break;case"i64":tempI64=[value>>>0,(tempDouble=value,+Math_abs(tempDouble)>=1?tempDouble>0?(Math_min(+Math_floor(tempDouble/4294967296),4294967295)|0)>>>0:~~+Math_ceil((tempDouble- +(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case"float":HEAPF32[ptr>>2]=value;break;case"double":HEAPF64[ptr>>3]=value;break;default:abort("invalid type for setValue: "+type)}}var ALLOC_STATIC=2;var ALLOC_NONE=4;function Pointer_stringify(ptr,length){if(length===0||!ptr)return"";var hasUtf=0;var t;var i=0;while(1){t=HEAPU8[ptr+i>>0];hasUtf|=t;if(t==0&&!length)break;i++;if(length&&i==length)break}if(!length)length=i;var ret="";if(hasUtf<128){var MAX_CHUNK=1024;var curr;while(length>0){curr=String.fromCharCode.apply(String,HEAPU8.subarray(ptr,ptr+Math.min(length,MAX_CHUNK)));ret=ret?ret+curr:curr;ptr+=MAX_CHUNK;length-=MAX_CHUNK}return ret}return UTF8ToString(ptr)}var UTF8Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(u8Array,idx){var endPtr=idx;while(u8Array[endPtr])++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var u0,u1,u2,u3,u4,u5;var str="";while(1){u0=u8Array[idx++];if(!u0)return str;if(!(u0&128)){str+=String.fromCharCode(u0);continue}u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u3=u8Array[idx++]&63;if((u0&248)==240){u0=(u0&7)<<18|u1<<12|u2<<6|u3}else{u4=u8Array[idx++]&63;if((u0&252)==248){u0=(u0&3)<<24|u1<<18|u2<<12|u3<<6|u4}else{u5=u8Array[idx++]&63;u0=(u0&1)<<30|u1<<24|u2<<18|u3<<12|u4<<6|u5}}}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}}function UTF8ToString(ptr){return UTF8ArrayToString(HEAPU8,ptr)}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=2097151){if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else if(u<=67108863){if(outIdx+4>=endIdx)break;outU8Array[outIdx++]=248|u>>24;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+5>=endIdx)break;outU8Array[outIdx++]=252|u>>30;outU8Array[outIdx++]=128|u>>24&63;outU8Array[outIdx++]=128|u>>18&63;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127){++len}else if(u<=2047){len+=2}else if(u<=65535){len+=3}else if(u<=2097151){len+=4}else if(u<=67108863){len+=5}else{len+=6}}return len}var UTF16Decoder=typeof TextDecoder!=="undefined"?new TextDecoder("utf-16le"):undefined;function allocateUTF8(str){var size=lengthBytesUTF8(str)+1;var ret=_malloc(size);if(ret)stringToUTF8Array(str,HEAP8,ret,size);return ret}function demangle(func){return func}function demangleAll(text){var regex=/__Z[\w\d_]+/g;return text.replace(regex,(function(x){var y=demangle(x);return x===y?x:x+" ["+y+"]"}))}function jsStackTrace(){var err=new Error;if(!err.stack){try{throw new Error(0)}catch(e){err=e}if(!err.stack){return"(no stack trace available)"}}return err.stack.toString()}function stackTrace(){var js=jsStackTrace();if(Module["extraStackTrace"])js+="\n"+Module["extraStackTrace"]();return demangleAll(js)}var WASM_PAGE_SIZE=65536;var ASMJS_PAGE_SIZE=16777216;var MIN_TOTAL_MEMORY=16777216;function alignUp(x,multiple){if(x%multiple>0){x+=multiple-x%multiple}return x}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBuffer(buf){Module["buffer"]=buffer=buf}function updateGlobalBufferViews(){Module["HEAP8"]=HEAP8=new Int8Array(buffer);Module["HEAP16"]=HEAP16=new Int16Array(buffer);Module["HEAP32"]=HEAP32=new Int32Array(buffer);Module["HEAPU8"]=HEAPU8=new Uint8Array(buffer);Module["HEAPU16"]=HEAPU16=new Uint16Array(buffer);Module["HEAPU32"]=HEAPU32=new Uint32Array(buffer);Module["HEAPF32"]=HEAPF32=new Float32Array(buffer);Module["HEAPF64"]=HEAPF64=new Float64Array(buffer)}var STATIC_BASE,STATICTOP,staticSealed;var STACK_BASE,STACKTOP,STACK_MAX;var DYNAMIC_BASE,DYNAMICTOP_PTR;STATIC_BASE=STATICTOP=STACK_BASE=STACKTOP=STACK_MAX=DYNAMIC_BASE=DYNAMICTOP_PTR=0;staticSealed=false;function abortOnCannotGrowMemory(){abort("Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value "+TOTAL_MEMORY+", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ")}if(!Module["reallocBuffer"])Module["reallocBuffer"]=(function(size){var ret;try{if(ArrayBuffer.transfer){ret=ArrayBuffer.transfer(buffer,size)}else{var oldHEAP8=HEAP8;ret=new ArrayBuffer(size);var temp=new Int8Array(ret);temp.set(oldHEAP8)}}catch(e){return false}var success=_emscripten_replace_memory(ret);if(!success)return false;return ret});function enlargeMemory(){var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;var LIMIT=2147483648-PAGE_MULTIPLE;if(HEAP32[DYNAMICTOP_PTR>>2]>LIMIT){return false}var OLD_TOTAL_MEMORY=TOTAL_MEMORY;TOTAL_MEMORY=Math.max(TOTAL_MEMORY,MIN_TOTAL_MEMORY);while(TOTAL_MEMORY<HEAP32[DYNAMICTOP_PTR>>2]){if(TOTAL_MEMORY<=536870912){TOTAL_MEMORY=alignUp(2*TOTAL_MEMORY,PAGE_MULTIPLE)}else{TOTAL_MEMORY=Math.min(alignUp((3*TOTAL_MEMORY+2147483648)/4,PAGE_MULTIPLE),LIMIT)}}var replacement=Module["reallocBuffer"](TOTAL_MEMORY);if(!replacement||replacement.byteLength!=TOTAL_MEMORY){TOTAL_MEMORY=OLD_TOTAL_MEMORY;return false}updateGlobalBuffer(replacement);updateGlobalBufferViews();return true}var byteLength;try{byteLength=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get);byteLength(new ArrayBuffer(4))}catch(e){byteLength=(function(buffer){return buffer.byteLength})}var TOTAL_STACK=Module["TOTAL_STACK"]||5242880;var TOTAL_MEMORY=Module["TOTAL_MEMORY"]||16777216;if(TOTAL_MEMORY<TOTAL_STACK)Module.printErr("TOTAL_MEMORY should be larger than TOTAL_STACK, was "+TOTAL_MEMORY+"! (TOTAL_STACK="+TOTAL_STACK+")");if(Module["buffer"]){buffer=Module["buffer"]}else{if(typeof WebAssembly==="object"&&typeof WebAssembly.Memory==="function"){Module["wasmMemory"]=new WebAssembly.Memory({"initial":TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=Module["wasmMemory"].buffer}else{buffer=new ArrayBuffer(TOTAL_MEMORY)}Module["buffer"]=buffer}updateGlobalBufferViews();function getTotalMemory(){return TOTAL_MEMORY}HEAP32[0]=1668509029;HEAP16[1]=25459;if(HEAPU8[2]!==115||HEAPU8[3]!==99)throw"Runtime error: expected the system to be little-endian!";function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback=="function"){callback();continue}var func=callback.func;if(typeof func==="number"){if(callback.arg===undefined){Module["dynCall_v"](func)}else{Module["dynCall_vi"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATEXIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;var runtimeExited=false;function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function exitRuntime(){callRuntimeCallbacks(__ATEXIT__);runtimeExited=true}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}function writeArrayToMemory(array,buffer){HEAP8.set(array,buffer)}function writeAsciiToMemory(str,buffer,dontAddNull){for(var i=0;i<str.length;++i){HEAP8[buffer++>>0]=str.charCodeAt(i)}if(!dontAddNull)HEAP8[buffer>>0]=0}var Math_abs=Math.abs;var Math_cos=Math.cos;var Math_sin=Math.sin;var Math_tan=Math.tan;var Math_acos=Math.acos;var Math_asin=Math.asin;var Math_atan=Math.atan;var Math_atan2=Math.atan2;var Math_exp=Math.exp;var Math_log=Math.log;var Math_sqrt=Math.sqrt;var Math_ceil=Math.ceil;var Math_floor=Math.floor;var Math_pow=Math.pow;var Math_imul=Math.imul;var Math_fround=Math.fround;var Math_round=Math.round;var Math_min=Math.min;var Math_max=Math.max;var Math_clz32=Math.clz32;var Math_trunc=Math.trunc;var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function getUniqueRunDependency(id){return id}function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module["preloadedImages"]={};Module["preloadedAudios"]={};var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}function integrateWasmJS(){var wasmTextFile="libbiswasm.wast";var wasmBinaryFile="libbiswasm.wasm";var asmjsCodeFile="libbiswasm.temp.asm.js";if(typeof Module["locateFile"]==="function"){if(!isDataURI(wasmTextFile)){wasmTextFile=Module["locateFile"](wasmTextFile)}if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=Module["locateFile"](wasmBinaryFile)}if(!isDataURI(asmjsCodeFile)){asmjsCodeFile=Module["locateFile"](asmjsCodeFile)}}var wasmPageSize=64*1024;var info={"global":null,"env":null,"asm2wasm":{"f64-rem":(function(x,y){return x%y}),"debugger":(function(){debugger})},"parent":Module};var exports=null;function mergeMemory(newBuffer){var oldBuffer=Module["buffer"];if(newBuffer.byteLength<oldBuffer.byteLength){Module["printErr"]("the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here")}var oldView=new Int8Array(oldBuffer);var newView=new Int8Array(newBuffer);newView.set(oldView);updateGlobalBuffer(newBuffer);updateGlobalBufferViews()}function fixImports(imports){return imports}function getBinary(){try{if(Module["wasmBinary"]){return new Uint8Array(Module["wasmBinary"])}if(Module["readBinary"]){return Module["readBinary"](wasmBinaryFile)}else{throw"on the web, we need the wasm binary to be preloaded and set on Module['wasmBinary']. emcc.py will do that for you when generating HTML (but not JS)"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module["wasmBinary"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch==="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then((function(response){if(!response["ok"]){throw"failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()})).catch((function(){return getBinary()}))}return new Promise((function(resolve,reject){resolve(getBinary())}))}function doNativeWasm(global,env,providedBuffer){if(typeof WebAssembly!=="object"){Module["printErr"]("no native wasm support detected");return false}if(!(Module["wasmMemory"]instanceof WebAssembly.Memory)){Module["printErr"]("no native wasm Memory in use");return false}env["memory"]=Module["wasmMemory"];info["global"]={"NaN":NaN,"Infinity":Infinity};info["global.Math"]=Math;info["env"]=env;function receiveInstance(instance,module){exports=instance.exports;if(exports.memory)mergeMemory(exports.memory);Module["asm"]=exports;Module["usingWasm"]=true;removeRunDependency("wasm-instantiate")}addRunDependency("wasm-instantiate");if(Module["instantiateWasm"]){try{return Module["instantiateWasm"](info,receiveInstance)}catch(e){Module["printErr"]("Module.instantiateWasm callback failed with error: "+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output["instance"],output["module"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then((function(binary){return WebAssembly.instantiate(binary,info)})).then(receiver).catch((function(reason){Module["printErr"]("failed to asynchronously prepare wasm: "+reason);abort(reason)}))}if(!Module["wasmBinary"]&&typeof WebAssembly.instantiateStreaming==="function"&&!isDataURI(wasmBinaryFile)&&typeof fetch==="function"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:"same-origin"}),info).then(receiveInstantiatedSource).catch((function(reason){Module["printErr"]("wasm streaming compile failed: "+reason);Module["printErr"]("falling back to ArrayBuffer instantiation");instantiateArrayBuffer(receiveInstantiatedSource)}))}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module["asmPreload"]=Module["asm"];var asmjsReallocBuffer=Module["reallocBuffer"];var wasmReallocBuffer=(function(size){var PAGE_MULTIPLE=Module["usingWasm"]?WASM_PAGE_SIZE:ASMJS_PAGE_SIZE;size=alignUp(size,PAGE_MULTIPLE);var old=Module["buffer"];var oldSize=old.byteLength;if(Module["usingWasm"]){try{var result=Module["wasmMemory"].grow((size-oldSize)/wasmPageSize);if(result!==(-1|0)){return Module["buffer"]=Module["wasmMemory"].buffer}else{return null}}catch(e){return null}}});Module["reallocBuffer"]=(function(size){if(finalMethod==="asmjs"){return asmjsReallocBuffer(size)}else{return wasmReallocBuffer(size)}});var finalMethod="";Module["asm"]=(function(global,env,providedBuffer){env=fixImports(env);if(!env["table"]){var TABLE_SIZE=Module["wasmTableSize"];if(TABLE_SIZE===undefined)TABLE_SIZE=1024;var MAX_TABLE_SIZE=Module["wasmMaxTableSize"];if(typeof WebAssembly==="object"&&typeof WebAssembly.Table==="function"){if(MAX_TABLE_SIZE!==undefined){env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,"maximum":MAX_TABLE_SIZE,"element":"anyfunc"})}else{env["table"]=new WebAssembly.Table({"initial":TABLE_SIZE,element:"anyfunc"})}}else{env["table"]=new Array(TABLE_SIZE)}Module["wasmTable"]=env["table"]}if(!env["memoryBase"]){env["memoryBase"]=Module["STATIC_BASE"]}if(!env["tableBase"]){env["tableBase"]=0}var exports;exports=doNativeWasm(global,env,providedBuffer);if(!exports)abort("no binaryen method succeeded. consider enabling more options, like interpreting, if you want that: https://github.com/kripken/emscripten/wiki/WebAssembly#binaryen-methods");return exports});}integrateWasmJS();STATIC_BASE=GLOBAL_BASE;STATICTOP=STATIC_BASE+51280;__ATINIT__.push({func:(function(){__GLOBAL__I_000101()})},{func:(function(){__GLOBAL__sub_I_bisMemoryManagement_cpp()})},{func:(function(){__GLOBAL__sub_I_bisObject_cpp()})},{func:(function(){__GLOBAL__sub_I_iostream_cpp()})});var STATIC_BUMP=51280;Module["STATIC_BASE"]=STATIC_BASE;Module["STATIC_BUMP"]=STATIC_BUMP;var tempDoublePtr=STATICTOP;STATICTOP+=16;function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}function ___assert_fail(condition,filename,line,func){abort("Assertion failed: "+Pointer_stringify(condition)+", at: "+[filename?Pointer_stringify(filename):"unknown filename",line,func?Pointer_stringify(func):"unknown function"])}function ___cxa_allocate_exception(size){return _malloc(size)}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:(function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var info=EXCEPTIONS.infos[ptr];if(info.adjusted===adjusted){return ptr}}return adjusted}),addRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++}),decRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module["dynCall_vi"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}}),clearRef:(function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0})};function ___cxa_begin_catch(ptr){var info=EXCEPTIONS.infos[ptr];if(info&&!info.caught){info.caught=true;__ZSt18uncaught_exceptionv.uncaught_exception--}if(info)info.rethrown=false;EXCEPTIONS.caught.push(ptr);EXCEPTIONS.addRef(EXCEPTIONS.deAdjust(ptr));return ptr}function ___cxa_pure_virtual(){ABORT=true;throw"Pure virtual function called!"}function ___resumeException(ptr){if(!EXCEPTIONS.last){EXCEPTIONS.last=ptr}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___cxa_find_matching_catch(){var thrown=EXCEPTIONS.last;if(!thrown){return(setTempRet0(0),0)|0}var info=EXCEPTIONS.infos[thrown];var throwntype=info.type;if(!throwntype){return(setTempRet0(0),thrown)|0}var typeArray=Array.prototype.slice.call(arguments);var pointer=Module["___cxa_is_pointer_type"](throwntype);if(!___cxa_find_matching_catch.buffer)___cxa_find_matching_catch.buffer=_malloc(4);HEAP32[___cxa_find_matching_catch.buffer>>2]=thrown;thrown=___cxa_find_matching_catch.buffer;for(var i=0;i<typeArray.length;i++){if(typeArray[i]&&Module["___cxa_can_catch"](typeArray[i],throwntype,thrown)){thrown=HEAP32[thrown>>2];info.adjusted=thrown;return(setTempRet0(typeArray[i]),thrown)|0}}thrown=HEAP32[thrown>>2];return(setTempRet0(throwntype),thrown)|0}function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:ptr,type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!("uncaught_exception"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr+" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch."}function ___gxx_personality_v0(){}function ___lock(){}var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function ___setErrNo(value){if(Module["___errno_location"])HEAP32[Module["___errno_location"]()>>2]=value;return value}function ___map_file(pathname,size){___setErrNo(ERRNO_CODES.EPERM);return-1}var ERRNO_MESSAGES={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};var PATH={splitPath:(function(filename){var splitPathRe=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;return splitPathRe.exec(filename).slice(1)}),normalizeArray:(function(parts,allowAboveRoot){var up=0;for(var i=parts.length-1;i>=0;i--){var last=parts[i];if(last==="."){parts.splice(i,1)}else if(last===".."){parts.splice(i,1);up++}else if(up){parts.splice(i,1);up--}}if(allowAboveRoot){for(;up;up--){parts.unshift("..")}}return parts}),normalize:(function(path){var isAbsolute=path.charAt(0)==="/",trailingSlash=path.substr(-1)==="/";path=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),!isAbsolute).join("/");if(!path&&!isAbsolute){path="."}if(path&&trailingSlash){path+="/"}return(isAbsolute?"/":"")+path}),dirname:(function(path){var result=PATH.splitPath(path),root=result[0],dir=result[1];if(!root&&!dir){return"."}if(dir){dir=dir.substr(0,dir.length-1)}return root+dir}),basename:(function(path){if(path==="/")return"/";var lastSlash=path.lastIndexOf("/");if(lastSlash===-1)return path;return path.substr(lastSlash+1)}),extname:(function(path){return PATH.splitPath(path)[3]}),join:(function(){var paths=Array.prototype.slice.call(arguments,0);return PATH.normalize(paths.join("/"))}),join2:(function(l,r){return PATH.normalize(l+"/"+r)}),resolve:(function(){var resolvedPath="",resolvedAbsolute=false;for(var i=arguments.length-1;i>=-1&&!resolvedAbsolute;i--){var path=i>=0?arguments[i]:FS.cwd();if(typeof path!=="string"){throw new TypeError("Arguments to path.resolve must be strings")}else if(!path){return""}resolvedPath=path+"/"+resolvedPath;resolvedAbsolute=path.charAt(0)==="/"}resolvedPath=PATH.normalizeArray(resolvedPath.split("/").filter((function(p){return!!p})),!resolvedAbsolute).join("/");return(resolvedAbsolute?"/":"")+resolvedPath||"."}),relative:(function(from,to){from=PATH.resolve(from).substr(1);to=PATH.resolve(to).substr(1);function trim(arr){var start=0;for(;start<arr.length;start++){if(arr[start]!=="")break}var end=arr.length-1;for(;end>=0;end--){if(arr[end]!=="")break}if(start>end)return[];return arr.slice(start,end-start+1)}var fromParts=trim(from.split("/"));var toParts=trim(to.split("/"));var length=Math.min(fromParts.length,toParts.length);var samePartsLength=length;for(var i=0;i<length;i++){if(fromParts[i]!==toParts[i]){samePartsLength=i;break}}var outputParts=[];for(var i=samePartsLength;i<fromParts.length;i++){outputParts.push("..")}outputParts=outputParts.concat(toParts.slice(samePartsLength));return outputParts.join("/")})};var TTY={ttys:[],init:(function(){}),shutdown:(function(){}),register:(function(dev,ops){TTY.ttys[dev]={input:[],output:[],ops:ops};FS.registerDevice(dev,TTY.stream_ops)}),stream_ops:{open:(function(stream){var tty=TTY.ttys[stream.node.rdev];if(!tty){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}stream.tty=tty;stream.seekable=false}),close:(function(stream){stream.tty.ops.flush(stream.tty)}),flush:(function(stream){stream.tty.ops.flush(stream.tty)}),read:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.get_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=stream.tty.ops.get_char(stream.tty)}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){if(!stream.tty||!stream.tty.ops.put_char){throw new FS.ErrnoError(ERRNO_CODES.ENXIO)}for(var i=0;i<length;i++){try{stream.tty.ops.put_char(stream.tty,buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})},default_tty_ops:{get_char:(function(tty){if(!tty.input.length){var result=null;if(ENVIRONMENT_IS_NODE){var BUFSIZE=256;var buf=new Buffer(BUFSIZE);var bytesRead=0;var isPosixPlatform=process.platform!="win32";var fd=process.stdin.fd;if(isPosixPlatform){var usingDevice=false;try{fd=fs.openSync("/dev/stdin","r");usingDevice=true}catch(e){}}try{bytesRead=fs.readSync(fd,buf,0,BUFSIZE,null)}catch(e){if(e.toString().indexOf("EOF")!=-1)bytesRead=0;else throw e}if(usingDevice){fs.closeSync(fd)}if(bytesRead>0){result=buf.slice(0,bytesRead).toString("utf-8")}else{result=null}}else if(typeof window!="undefined"&&typeof window.prompt=="function"){result=window.prompt("Input: ");if(result!==null){result+="\n"}}else if(typeof readline=="function"){result=readline();if(result!==null){result+="\n"}}if(!result){return null}tty.input=intArrayFromString(result,true)}return tty.input.shift()}),put_char:(function(tty,val){if(val===null||val===10){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["print"](UTF8ArrayToString(tty.output,0));tty.output=[]}})},default_tty1_ops:{put_char:(function(tty,val){if(val===null||val===10){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}else{if(val!=0)tty.output.push(val)}}),flush:(function(tty){if(tty.output&&tty.output.length>0){Module["printErr"](UTF8ArrayToString(tty.output,0));tty.output=[]}})}};var MEMFS={ops_table:null,mount:(function(mount){return MEMFS.createNode(null,"/",16384|511,0)}),createNode:(function(parent,name,mode,dev){if(FS.isBlkdev(mode)||FS.isFIFO(mode)){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(!MEMFS.ops_table){MEMFS.ops_table={dir:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,lookup:MEMFS.node_ops.lookup,mknod:MEMFS.node_ops.mknod,rename:MEMFS.node_ops.rename,unlink:MEMFS.node_ops.unlink,rmdir:MEMFS.node_ops.rmdir,readdir:MEMFS.node_ops.readdir,symlink:MEMFS.node_ops.symlink},stream:{llseek:MEMFS.stream_ops.llseek}},file:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:{llseek:MEMFS.stream_ops.llseek,read:MEMFS.stream_ops.read,write:MEMFS.stream_ops.write,allocate:MEMFS.stream_ops.allocate,mmap:MEMFS.stream_ops.mmap,msync:MEMFS.stream_ops.msync}},link:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr,readlink:MEMFS.node_ops.readlink},stream:{}},chrdev:{node:{getattr:MEMFS.node_ops.getattr,setattr:MEMFS.node_ops.setattr},stream:FS.chrdev_stream_ops}}}var node=FS.createNode(parent,name,mode,dev);if(FS.isDir(node.mode)){node.node_ops=MEMFS.ops_table.dir.node;node.stream_ops=MEMFS.ops_table.dir.stream;node.contents={}}else if(FS.isFile(node.mode)){node.node_ops=MEMFS.ops_table.file.node;node.stream_ops=MEMFS.ops_table.file.stream;node.usedBytes=0;node.contents=null}else if(FS.isLink(node.mode)){node.node_ops=MEMFS.ops_table.link.node;node.stream_ops=MEMFS.ops_table.link.stream}else if(FS.isChrdev(node.mode)){node.node_ops=MEMFS.ops_table.chrdev.node;node.stream_ops=MEMFS.ops_table.chrdev.stream}node.timestamp=Date.now();if(parent){parent.contents[name]=node}return node}),getFileDataAsRegularArray:(function(node){if(node.contents&&node.contents.subarray){var arr=[];for(var i=0;i<node.usedBytes;++i)arr.push(node.contents[i]);return arr}return node.contents}),getFileDataAsTypedArray:(function(node){if(!node.contents)return new Uint8Array;if(node.contents.subarray)return node.contents.subarray(0,node.usedBytes);return new Uint8Array(node.contents)}),expandFileStorage:(function(node,newCapacity){if(node.contents&&node.contents.subarray&&newCapacity>node.contents.length){node.contents=MEMFS.getFileDataAsRegularArray(node);node.usedBytes=node.contents.length}if(!node.contents||node.contents.subarray){var prevCapacity=node.contents?node.contents.length:0;if(prevCapacity>=newCapacity)return;var CAPACITY_DOUBLING_MAX=1024*1024;newCapacity=Math.max(newCapacity,prevCapacity*(prevCapacity<CAPACITY_DOUBLING_MAX?2:1.125)|0);if(prevCapacity!=0)newCapacity=Math.max(newCapacity,256);var oldContents=node.contents;node.contents=new Uint8Array(newCapacity);if(node.usedBytes>0)node.contents.set(oldContents.subarray(0,node.usedBytes),0);return}if(!node.contents&&newCapacity>0)node.contents=[];while(node.contents.length<newCapacity)node.contents.push(0)}),resizeFileStorage:(function(node,newSize){if(node.usedBytes==newSize)return;if(newSize==0){node.contents=null;node.usedBytes=0;return}if(!node.contents||node.contents.subarray){var oldContents=node.contents;node.contents=new Uint8Array(new ArrayBuffer(newSize));if(oldContents){node.contents.set(oldContents.subarray(0,Math.min(newSize,node.usedBytes)))}node.usedBytes=newSize;return}if(!node.contents)node.contents=[];if(node.contents.length>newSize)node.contents.length=newSize;else while(node.contents.length<newSize)node.contents.push(0);node.usedBytes=newSize}),node_ops:{getattr:(function(node){var attr={};attr.dev=FS.isChrdev(node.mode)?node.id:1;attr.ino=node.id;attr.mode=node.mode;attr.nlink=1;attr.uid=0;attr.gid=0;attr.rdev=node.rdev;if(FS.isDir(node.mode)){attr.size=4096}else if(FS.isFile(node.mode)){attr.size=node.usedBytes}else if(FS.isLink(node.mode)){attr.size=node.link.length}else{attr.size=0}attr.atime=new Date(node.timestamp);attr.mtime=new Date(node.timestamp);attr.ctime=new Date(node.timestamp);attr.blksize=4096;attr.blocks=Math.ceil(attr.size/attr.blksize);return attr}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}if(attr.size!==undefined){MEMFS.resizeFileStorage(node,attr.size)}}),lookup:(function(parent,name){throw FS.genericErrors[ERRNO_CODES.ENOENT]}),mknod:(function(parent,name,mode,dev){return MEMFS.createNode(parent,name,mode,dev)}),rename:(function(old_node,new_dir,new_name){if(FS.isDir(old_node.mode)){var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(new_node){for(var i in new_node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}}}delete old_node.parent.contents[old_node.name];old_node.name=new_name;new_dir.contents[new_name]=old_node;old_node.parent=new_dir}),unlink:(function(parent,name){delete parent.contents[name]}),rmdir:(function(parent,name){var node=FS.lookupNode(parent,name);for(var i in node.contents){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}delete parent.contents[name]}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newname,oldpath){var node=MEMFS.createNode(parent,newname,511|40960,0);node.link=oldpath;return node}),readlink:(function(node){if(!FS.isLink(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return node.link})},stream_ops:{read:(function(stream,buffer,offset,length,position){var contents=stream.node.contents;if(position>=stream.node.usedBytes)return 0;var size=Math.min(stream.node.usedBytes-position,length);assert(size>=0);if(size>8&&contents.subarray){buffer.set(contents.subarray(position,position+size),offset)}else{for(var i=0;i<size;i++)buffer[offset+i]=contents[position+i]}return size}),write:(function(stream,buffer,offset,length,position,canOwn){if(!length)return 0;var node=stream.node;node.timestamp=Date.now();if(buffer.subarray&&(!node.contents||node.contents.subarray)){if(canOwn){node.contents=buffer.subarray(offset,offset+length);node.usedBytes=length;return length}else if(node.usedBytes===0&&position===0){node.contents=new Uint8Array(buffer.subarray(offset,offset+length));node.usedBytes=length;return length}else if(position+length<=node.usedBytes){node.contents.set(buffer.subarray(offset,offset+length),position);return length}}MEMFS.expandFileStorage(node,position+length);if(node.contents.subarray&&buffer.subarray)node.contents.set(buffer.subarray(offset,offset+length),position);else{for(var i=0;i<length;i++){node.contents[position+i]=buffer[offset+i]}}node.usedBytes=Math.max(node.usedBytes,position+length);return length}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.usedBytes}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position}),allocate:(function(stream,offset,length){MEMFS.expandFileStorage(stream.node,offset+length);stream.node.usedBytes=Math.max(stream.node.usedBytes,offset+length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}var ptr;var allocated;var contents=stream.node.contents;if(!(flags&2)&&(contents.buffer===buffer||contents.buffer===buffer.buffer)){allocated=false;ptr=contents.byteOffset}else{if(position>0||position+length<stream.node.usedBytes){if(contents.subarray){contents=contents.subarray(position,position+length)}else{contents=Array.prototype.slice.call(contents,position,position+length)}}allocated=true;ptr=_malloc(length);if(!ptr){throw new FS.ErrnoError(ERRNO_CODES.ENOMEM)}buffer.set(contents,ptr)}return{ptr:ptr,allocated:allocated}}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!FS.isFile(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(mmapFlags&2){return 0}var bytesWritten=MEMFS.stream_ops.write(stream,buffer,0,length,offset,false);return 0})}};var IDBFS={dbs:{},indexedDB:(function(){if(typeof indexedDB!=="undefined")return indexedDB;var ret=null;if(typeof window==="object")ret=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;assert(ret,"IDBFS used, but indexedDB not supported");return ret}),DB_VERSION:21,DB_STORE_NAME:"FILE_DATA",mount:(function(mount){return MEMFS.mount.apply(null,arguments)}),syncfs:(function(mount,populate,callback){IDBFS.getLocalSet(mount,(function(err,local){if(err)return callback(err);IDBFS.getRemoteSet(mount,(function(err,remote){if(err)return callback(err);var src=populate?remote:local;var dst=populate?local:remote;IDBFS.reconcile(src,dst,callback)}))}))}),getDB:(function(name,callback){var db=IDBFS.dbs[name];if(db){return callback(null,db)}var req;try{req=IDBFS.indexedDB().open(name,IDBFS.DB_VERSION)}catch(e){return callback(e)}if(!req){return callback("Unable to connect to IndexedDB")}req.onupgradeneeded=(function(e){var db=e.target.result;var transaction=e.target.transaction;var fileStore;if(db.objectStoreNames.contains(IDBFS.DB_STORE_NAME)){fileStore=transaction.objectStore(IDBFS.DB_STORE_NAME)}else{fileStore=db.createObjectStore(IDBFS.DB_STORE_NAME)}if(!fileStore.indexNames.contains("timestamp")){fileStore.createIndex("timestamp","timestamp",{unique:false})}});req.onsuccess=(function(){db=req.result;IDBFS.dbs[name]=db;callback(null,db)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),getLocalSet:(function(mount,callback){var entries={};function isRealDir(p){return p!=="."&&p!==".."}function toAbsolute(root){return(function(p){return PATH.join2(root,p)})}var check=FS.readdir(mount.mountpoint).filter(isRealDir).map(toAbsolute(mount.mountpoint));while(check.length){var path=check.pop();var stat;try{stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){check.push.apply(check,FS.readdir(path).filter(isRealDir).map(toAbsolute(path)))}entries[path]={timestamp:stat.mtime}}return callback(null,{type:"local",entries:entries})}),getRemoteSet:(function(mount,callback){var entries={};IDBFS.getDB(mount.mountpoint,(function(err,db){if(err)return callback(err);try{var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readonly");transaction.onerror=(function(e){callback(this.error);e.preventDefault()});var store=transaction.objectStore(IDBFS.DB_STORE_NAME);var index=store.index("timestamp");index.openKeyCursor().onsuccess=(function(event){var cursor=event.target.result;if(!cursor){return callback(null,{type:"remote",db:db,entries:entries})}entries[cursor.primaryKey]={timestamp:cursor.key};cursor.continue()})}catch(e){return callback(e)}}))}),loadLocalEntry:(function(path,callback){var stat,node;try{var lookup=FS.lookupPath(path);node=lookup.node;stat=FS.stat(path)}catch(e){return callback(e)}if(FS.isDir(stat.mode)){return callback(null,{timestamp:stat.mtime,mode:stat.mode})}else if(FS.isFile(stat.mode)){node.contents=MEMFS.getFileDataAsTypedArray(node);return callback(null,{timestamp:stat.mtime,mode:stat.mode,contents:node.contents})}else{return callback(new Error("node type not supported"))}}),storeLocalEntry:(function(path,entry,callback){try{if(FS.isDir(entry.mode)){FS.mkdir(path,entry.mode)}else if(FS.isFile(entry.mode)){FS.writeFile(path,entry.contents,{canOwn:true})}else{return callback(new Error("node type not supported"))}FS.chmod(path,entry.mode);FS.utime(path,entry.timestamp,entry.timestamp)}catch(e){return callback(e)}callback(null)}),removeLocalEntry:(function(path,callback){try{var lookup=FS.lookupPath(path);var stat=FS.stat(path);if(FS.isDir(stat.mode)){FS.rmdir(path)}else if(FS.isFile(stat.mode)){FS.unlink(path)}}catch(e){return callback(e)}callback(null)}),loadRemoteEntry:(function(store,path,callback){var req=store.get(path);req.onsuccess=(function(event){callback(null,event.target.result)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),storeRemoteEntry:(function(store,path,entry,callback){var req=store.put(entry,path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),removeRemoteEntry:(function(store,path,callback){var req=store.delete(path);req.onsuccess=(function(){callback(null)});req.onerror=(function(e){callback(this.error);e.preventDefault()})}),reconcile:(function(src,dst,callback){var total=0;var create=[];Object.keys(src.entries).forEach((function(key){var e=src.entries[key];var e2=dst.entries[key];if(!e2||e.timestamp>e2.timestamp){create.push(key);total++}}));var remove=[];Object.keys(dst.entries).forEach((function(key){var e=dst.entries[key];var e2=src.entries[key];if(!e2){remove.push(key);total++}}));if(!total){return callback(null)}var completed=0;var db=src.type==="remote"?src.db:dst.db;var transaction=db.transaction([IDBFS.DB_STORE_NAME],"readwrite");var store=transaction.objectStore(IDBFS.DB_STORE_NAME);function done(err){if(err){if(!done.errored){done.errored=true;return callback(err)}return}if(++completed>=total){return callback(null)}}transaction.onerror=(function(e){done(this.error);e.preventDefault()});create.sort().forEach((function(path){if(dst.type==="local"){IDBFS.loadRemoteEntry(store,path,(function(err,entry){if(err)return done(err);IDBFS.storeLocalEntry(path,entry,done)}))}else{IDBFS.loadLocalEntry(path,(function(err,entry){if(err)return done(err);IDBFS.storeRemoteEntry(store,path,entry,done)}))}}));remove.sort().reverse().forEach((function(path){if(dst.type==="local"){IDBFS.removeLocalEntry(path,done)}else{IDBFS.removeRemoteEntry(store,path,done)}}))})};var NODEFS={isWindows:false,staticInit:(function(){NODEFS.isWindows=!!process.platform.match(/^win/);var flags=process["binding"]("constants");if(flags["fs"]){flags=flags["fs"]}NODEFS.flagsForNodeMap={"1024":flags["O_APPEND"],"64":flags["O_CREAT"],"128":flags["O_EXCL"],"0":flags["O_RDONLY"],"2":flags["O_RDWR"],"4096":flags["O_SYNC"],"512":flags["O_TRUNC"],"1":flags["O_WRONLY"]}}),bufferFrom:(function(arrayBuffer){return Buffer.alloc?Buffer.from(arrayBuffer):new Buffer(arrayBuffer)}),mount:(function(mount){assert(ENVIRONMENT_IS_NODE);return NODEFS.createNode(null,"/",NODEFS.getMode(mount.opts.root),0)}),createNode:(function(parent,name,mode,dev){if(!FS.isDir(mode)&&!FS.isFile(mode)&&!FS.isLink(mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=FS.createNode(parent,name,mode);node.node_ops=NODEFS.node_ops;node.stream_ops=NODEFS.stream_ops;return node}),getMode:(function(path){var stat;try{stat=fs.lstatSync(path);if(NODEFS.isWindows){stat.mode=stat.mode|(stat.mode&292)>>2}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return stat.mode}),realPath:(function(node){var parts=[];while(node.parent!==node){parts.push(node.name);node=node.parent}parts.push(node.mount.opts.root);parts.reverse();return PATH.join.apply(null,parts)}),flagsForNode:(function(flags){flags&=~2097152;flags&=~2048;flags&=~32768;flags&=~524288;var newFlags=0;for(var k in NODEFS.flagsForNodeMap){if(flags&k){newFlags|=NODEFS.flagsForNodeMap[k];flags^=k}}if(!flags){return newFlags}else{throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}}),node_ops:{getattr:(function(node){var path=NODEFS.realPath(node);var stat;try{stat=fs.lstatSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}if(NODEFS.isWindows&&!stat.blksize){stat.blksize=4096}if(NODEFS.isWindows&&!stat.blocks){stat.blocks=(stat.size+stat.blksize-1)/stat.blksize|0}return{dev:stat.dev,ino:stat.ino,mode:stat.mode,nlink:stat.nlink,uid:stat.uid,gid:stat.gid,rdev:stat.rdev,size:stat.size,atime:stat.atime,mtime:stat.mtime,ctime:stat.ctime,blksize:stat.blksize,blocks:stat.blocks}}),setattr:(function(node,attr){var path=NODEFS.realPath(node);try{if(attr.mode!==undefined){fs.chmodSync(path,attr.mode);node.mode=attr.mode}if(attr.timestamp!==undefined){var date=new Date(attr.timestamp);fs.utimesSync(path,date,date)}if(attr.size!==undefined){fs.truncateSync(path,attr.size)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),lookup:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);var mode=NODEFS.getMode(path);return NODEFS.createNode(parent,name,mode)}),mknod:(function(parent,name,mode,dev){var node=NODEFS.createNode(parent,name,mode,dev);var path=NODEFS.realPath(node);try{if(FS.isDir(node.mode)){fs.mkdirSync(path,node.mode)}else{fs.writeFileSync(path,"",{mode:node.mode})}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}return node}),rename:(function(oldNode,newDir,newName){var oldPath=NODEFS.realPath(oldNode);var newPath=PATH.join2(NODEFS.realPath(newDir),newName);try{fs.renameSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),unlink:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.unlinkSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),rmdir:(function(parent,name){var path=PATH.join2(NODEFS.realPath(parent),name);try{fs.rmdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readdir:(function(node){var path=NODEFS.realPath(node);try{return fs.readdirSync(path)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),symlink:(function(parent,newName,oldPath){var newPath=PATH.join2(NODEFS.realPath(parent),newName);try{fs.symlinkSync(oldPath,newPath)}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),readlink:(function(node){var path=NODEFS.realPath(node);try{path=fs.readlinkSync(path);path=NODEJS_PATH.relative(NODEJS_PATH.resolve(node.mount.opts.root),path);return path}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}})},stream_ops:{open:(function(stream){var path=NODEFS.realPath(stream.node);try{if(FS.isFile(stream.node.mode)){stream.nfd=fs.openSync(path,NODEFS.flagsForNode(stream.flags))}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),close:(function(stream){try{if(FS.isFile(stream.node.mode)&&stream.nfd){fs.closeSync(stream.nfd)}}catch(e){if(!e.code)throw e;throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),read:(function(stream,buffer,offset,length,position){if(length===0)return 0;try{return fs.readSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),write:(function(stream,buffer,offset,length,position){try{return fs.writeSync(stream.nfd,NODEFS.bufferFrom(buffer.buffer),offset,length,position)}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){try{var stat=fs.fstatSync(stream.nfd);position+=stat.size}catch(e){throw new FS.ErrnoError(ERRNO_CODES[e.code])}}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};var WORKERFS={DIR_MODE:16895,FILE_MODE:33279,reader:null,mount:(function(mount){assert(ENVIRONMENT_IS_WORKER);if(!WORKERFS.reader)WORKERFS.reader=new FileReaderSync;var root=WORKERFS.createNode(null,"/",WORKERFS.DIR_MODE,0);var createdParents={};function ensureParent(path){var parts=path.split("/");var parent=root;for(var i=0;i<parts.length-1;i++){var curr=parts.slice(0,i+1).join("/");if(!createdParents[curr]){createdParents[curr]=WORKERFS.createNode(parent,parts[i],WORKERFS.DIR_MODE,0)}parent=createdParents[curr]}return parent}function base(path){var parts=path.split("/");return parts[parts.length-1]}Array.prototype.forEach.call(mount.opts["files"]||[],(function(file){WORKERFS.createNode(ensureParent(file.name),base(file.name),WORKERFS.FILE_MODE,0,file,file.lastModifiedDate)}));(mount.opts["blobs"]||[]).forEach((function(obj){WORKERFS.createNode(ensureParent(obj["name"]),base(obj["name"]),WORKERFS.FILE_MODE,0,obj["data"])}));(mount.opts["packages"]||[]).forEach((function(pack){pack["metadata"].files.forEach((function(file){var name=file.filename.substr(1);WORKERFS.createNode(ensureParent(name),base(name),WORKERFS.FILE_MODE,0,pack["blob"].slice(file.start,file.end))}))}));return root}),createNode:(function(parent,name,mode,dev,contents,mtime){var node=FS.createNode(parent,name,mode);node.mode=mode;node.node_ops=WORKERFS.node_ops;node.stream_ops=WORKERFS.stream_ops;node.timestamp=(mtime||new Date).getTime();assert(WORKERFS.FILE_MODE!==WORKERFS.DIR_MODE);if(mode===WORKERFS.FILE_MODE){node.size=contents.size;node.contents=contents}else{node.size=4096;node.contents={}}if(parent){parent.contents[name]=node}return node}),node_ops:{getattr:(function(node){return{dev:1,ino:undefined,mode:node.mode,nlink:1,uid:0,gid:0,rdev:undefined,size:node.size,atime:new Date(node.timestamp),mtime:new Date(node.timestamp),ctime:new Date(node.timestamp),blksize:4096,blocks:Math.ceil(node.size/4096)}}),setattr:(function(node,attr){if(attr.mode!==undefined){node.mode=attr.mode}if(attr.timestamp!==undefined){node.timestamp=attr.timestamp}}),lookup:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}),mknod:(function(parent,name,mode,dev){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rename:(function(oldNode,newDir,newName){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),unlink:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),rmdir:(function(parent,name){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readdir:(function(node){var entries=[".",".."];for(var key in node.contents){if(!node.contents.hasOwnProperty(key)){continue}entries.push(key)}return entries}),symlink:(function(parent,newName,oldPath){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}),readlink:(function(node){throw new FS.ErrnoError(ERRNO_CODES.EPERM)})},stream_ops:{read:(function(stream,buffer,offset,length,position){if(position>=stream.node.size)return 0;var chunk=stream.node.contents.slice(position,position+length);var ab=WORKERFS.reader.readAsArrayBuffer(chunk);buffer.set(new Uint8Array(ab),offset);return chunk.size}),write:(function(stream,buffer,offset,length,position){throw new FS.ErrnoError(ERRNO_CODES.EIO)}),llseek:(function(stream,offset,whence){var position=offset;if(whence===1){position+=stream.position}else if(whence===2){if(FS.isFile(stream.node.mode)){position+=stream.node.size}}if(position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return position})}};STATICTOP+=16;STATICTOP+=16;STATICTOP+=16;var FS={root:null,mounts:[],devices:{},streams:[],nextInode:1,nameTable:null,currentPath:"/",initialized:false,ignorePermissions:true,trackingDelegate:{},tracking:{openFlags:{READ:1,WRITE:2}},ErrnoError:null,genericErrors:{},filesystems:null,syncFSRequests:0,handleFSError:(function(e){if(!(e instanceof FS.ErrnoError))throw e+" : "+stackTrace();return ___setErrNo(e.errno)}),lookupPath:(function(path,opts){path=PATH.resolve(FS.cwd(),path);opts=opts||{};if(!path)return{path:"",node:null};var defaults={follow_mount:true,recurse_count:0};for(var key in defaults){if(opts[key]===undefined){opts[key]=defaults[key]}}if(opts.recurse_count>8){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}var parts=PATH.normalizeArray(path.split("/").filter((function(p){return!!p})),false);var current=FS.root;var current_path="/";for(var i=0;i<parts.length;i++){var islast=i===parts.length-1;if(islast&&opts.parent){break}current=FS.lookupNode(current,parts[i]);current_path=PATH.join2(current_path,parts[i]);if(FS.isMountpoint(current)){if(!islast||islast&&opts.follow_mount){current=current.mounted.root}}if(!islast||opts.follow){var count=0;while(FS.isLink(current.mode)){var link=FS.readlink(current_path);current_path=PATH.resolve(PATH.dirname(current_path),link);var lookup=FS.lookupPath(current_path,{recurse_count:opts.recurse_count});current=lookup.node;if(count++>40){throw new FS.ErrnoError(ERRNO_CODES.ELOOP)}}}}return{path:current_path,node:current}}),getPath:(function(node){var path;while(true){if(FS.isRoot(node)){var mount=node.mount.mountpoint;if(!path)return mount;return mount[mount.length-1]!=="/"?mount+"/"+path:mount+path}path=path?node.name+"/"+path:node.name;node=node.parent}}),hashName:(function(parentid,name){var hash=0;for(var i=0;i<name.length;i++){hash=(hash<<5)-hash+name.charCodeAt(i)|0}return(parentid+hash>>>0)%FS.nameTable.length}),hashAddNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);node.name_next=FS.nameTable[hash];FS.nameTable[hash]=node}),hashRemoveNode:(function(node){var hash=FS.hashName(node.parent.id,node.name);if(FS.nameTable[hash]===node){FS.nameTable[hash]=node.name_next}else{var current=FS.nameTable[hash];while(current){if(current.name_next===node){current.name_next=node.name_next;break}current=current.name_next}}}),lookupNode:(function(parent,name){var err=FS.mayLookup(parent);if(err){throw new FS.ErrnoError(err,parent)}var hash=FS.hashName(parent.id,name);for(var node=FS.nameTable[hash];node;node=node.name_next){var nodeName=node.name;if(node.parent.id===parent.id&&nodeName===name){return node}}return FS.lookup(parent,name)}),createNode:(function(parent,name,mode,rdev){if(!FS.FSNode){FS.FSNode=(function(parent,name,mode,rdev){if(!parent){parent=this}this.parent=parent;this.mount=parent.mount;this.mounted=null;this.id=FS.nextInode++;this.name=name;this.mode=mode;this.node_ops={};this.stream_ops={};this.rdev=rdev});FS.FSNode.prototype={};var readMode=292|73;var writeMode=146;Object.defineProperties(FS.FSNode.prototype,{read:{get:(function(){return(this.mode&readMode)===readMode}),set:(function(val){val?this.mode|=readMode:this.mode&=~readMode})},write:{get:(function(){return(this.mode&writeMode)===writeMode}),set:(function(val){val?this.mode|=writeMode:this.mode&=~writeMode})},isFolder:{get:(function(){return FS.isDir(this.mode)})},isDevice:{get:(function(){return FS.isChrdev(this.mode)})}})}var node=new FS.FSNode(parent,name,mode,rdev);FS.hashAddNode(node);return node}),destroyNode:(function(node){FS.hashRemoveNode(node)}),isRoot:(function(node){return node===node.parent}),isMountpoint:(function(node){return!!node.mounted}),isFile:(function(mode){return(mode&61440)===32768}),isDir:(function(mode){return(mode&61440)===16384}),isLink:(function(mode){return(mode&61440)===40960}),isChrdev:(function(mode){return(mode&61440)===8192}),isBlkdev:(function(mode){return(mode&61440)===24576}),isFIFO:(function(mode){return(mode&61440)===4096}),isSocket:(function(mode){return(mode&49152)===49152}),flagModes:{"r":0,"rs":1052672,"r+":2,"w":577,"wx":705,"xw":705,"w+":578,"wx+":706,"xw+":706,"a":1089,"ax":1217,"xa":1217,"a+":1090,"ax+":1218,"xa+":1218},modeStringToFlags:(function(str){var flags=FS.flagModes[str];if(typeof flags==="undefined"){throw new Error("Unknown file open mode: "+str)}return flags}),flagsToPermissionString:(function(flag){var perms=["r","w","rw"][flag&3];if(flag&512){perms+="w"}return perms}),nodePermissions:(function(node,perms){if(FS.ignorePermissions){return 0}if(perms.indexOf("r")!==-1&&!(node.mode&292)){return ERRNO_CODES.EACCES}else if(perms.indexOf("w")!==-1&&!(node.mode&146)){return ERRNO_CODES.EACCES}else if(perms.indexOf("x")!==-1&&!(node.mode&73)){return ERRNO_CODES.EACCES}return 0}),mayLookup:(function(dir){var err=FS.nodePermissions(dir,"x");if(err)return err;if(!dir.node_ops.lookup)return ERRNO_CODES.EACCES;return 0}),mayCreate:(function(dir,name){try{var node=FS.lookupNode(dir,name);return ERRNO_CODES.EEXIST}catch(e){}return FS.nodePermissions(dir,"wx")}),mayDelete:(function(dir,name,isdir){var node;try{node=FS.lookupNode(dir,name)}catch(e){return e.errno}var err=FS.nodePermissions(dir,"wx");if(err){return err}if(isdir){if(!FS.isDir(node.mode)){return ERRNO_CODES.ENOTDIR}if(FS.isRoot(node)||FS.getPath(node)===FS.cwd()){return ERRNO_CODES.EBUSY}}else{if(FS.isDir(node.mode)){return ERRNO_CODES.EISDIR}}return 0}),mayOpen:(function(node,flags){if(!node){return ERRNO_CODES.ENOENT}if(FS.isLink(node.mode)){return ERRNO_CODES.ELOOP}else if(FS.isDir(node.mode)){if(FS.flagsToPermissionString(flags)!=="r"||flags&512){return ERRNO_CODES.EISDIR}}return FS.nodePermissions(node,FS.flagsToPermissionString(flags))}),MAX_OPEN_FDS:4096,nextfd:(function(fd_start,fd_end){fd_start=fd_start||0;fd_end=fd_end||FS.MAX_OPEN_FDS;for(var fd=fd_start;fd<=fd_end;fd++){if(!FS.streams[fd]){return fd}}throw new FS.ErrnoError(ERRNO_CODES.EMFILE)}),getStream:(function(fd){return FS.streams[fd]}),createStream:(function(stream,fd_start,fd_end){if(!FS.FSStream){FS.FSStream=(function(){});FS.FSStream.prototype={};Object.defineProperties(FS.FSStream.prototype,{object:{get:(function(){return this.node}),set:(function(val){this.node=val})},isRead:{get:(function(){return(this.flags&2097155)!==1})},isWrite:{get:(function(){return(this.flags&2097155)!==0})},isAppend:{get:(function(){return this.flags&1024})}})}var newStream=new FS.FSStream;for(var p in stream){newStream[p]=stream[p]}stream=newStream;var fd=FS.nextfd(fd_start,fd_end);stream.fd=fd;FS.streams[fd]=stream;return stream}),closeStream:(function(fd){FS.streams[fd]=null}),chrdev_stream_ops:{open:(function(stream){var device=FS.getDevice(stream.node.rdev);stream.stream_ops=device.stream_ops;if(stream.stream_ops.open){stream.stream_ops.open(stream)}}),llseek:(function(){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)})},major:(function(dev){return dev>>8}),minor:(function(dev){return dev&255}),makedev:(function(ma,mi){return ma<<8|mi}),registerDevice:(function(dev,ops){FS.devices[dev]={stream_ops:ops}}),getDevice:(function(dev){return FS.devices[dev]}),getMounts:(function(mount){var mounts=[];var check=[mount];while(check.length){var m=check.pop();mounts.push(m);check.push.apply(check,m.mounts)}return mounts}),syncfs:(function(populate,callback){if(typeof populate==="function"){callback=populate;populate=false}FS.syncFSRequests++;if(FS.syncFSRequests>1){console.log("warning: "+FS.syncFSRequests+" FS.syncfs operations in flight at once, probably just doing extra work")}var mounts=FS.getMounts(FS.root.mount);var completed=0;function doCallback(err){assert(FS.syncFSRequests>0);FS.syncFSRequests--;return callback(err)}function done(err){if(err){if(!done.errored){done.errored=true;return doCallback(err)}return}if(++completed>=mounts.length){doCallback(null)}}mounts.forEach((function(mount){if(!mount.type.syncfs){return done(null)}mount.type.syncfs(mount,populate,done)}))}),mount:(function(type,opts,mountpoint){var root=mountpoint==="/";var pseudo=!mountpoint;var node;if(root&&FS.root){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}else if(!root&&!pseudo){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});mountpoint=lookup.path;node=lookup.node;if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}}var mount={type:type,opts:opts,mountpoint:mountpoint,mounts:[]};var mountRoot=type.mount(mount);mountRoot.mount=mount;mount.root=mountRoot;if(root){FS.root=mountRoot}else if(node){node.mounted=mount;if(node.mount){node.mount.mounts.push(mount)}}return mountRoot}),unmount:(function(mountpoint){var lookup=FS.lookupPath(mountpoint,{follow_mount:false});if(!FS.isMountpoint(lookup.node)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node=lookup.node;var mount=node.mounted;var mounts=FS.getMounts(mount);Object.keys(FS.nameTable).forEach((function(hash){var current=FS.nameTable[hash];while(current){var next=current.name_next;if(mounts.indexOf(current.mount)!==-1){FS.destroyNode(current)}current=next}}));node.mounted=null;var idx=node.mount.mounts.indexOf(mount);assert(idx!==-1);node.mount.mounts.splice(idx,1)}),lookup:(function(parent,name){return parent.node_ops.lookup(parent,name)}),mknod:(function(path,mode,dev){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);if(!name||name==="."||name===".."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.mayCreate(parent,name);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.mknod){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.mknod(parent,name,mode,dev)}),create:(function(path,mode){mode=mode!==undefined?mode:438;mode&=4095;mode|=32768;return FS.mknod(path,mode,0)}),mkdir:(function(path,mode){mode=mode!==undefined?mode:511;mode&=511|512;mode|=16384;return FS.mknod(path,mode,0)}),mkdirTree:(function(path,mode){var dirs=path.split("/");var d="";for(var i=0;i<dirs.length;++i){if(!dirs[i])continue;d+="/"+dirs[i];try{FS.mkdir(d,mode)}catch(e){if(e.errno!=ERRNO_CODES.EEXIST)throw e}}}),mkdev:(function(path,mode,dev){if(typeof dev==="undefined"){dev=mode;mode=438}mode|=8192;return FS.mknod(path,mode,dev)}),symlink:(function(oldpath,newpath){if(!PATH.resolve(oldpath)){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var lookup=FS.lookupPath(newpath,{parent:true});var parent=lookup.node;if(!parent){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}var newname=PATH.basename(newpath);var err=FS.mayCreate(parent,newname);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.symlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return parent.node_ops.symlink(parent,newname,oldpath)}),rename:(function(old_path,new_path){var old_dirname=PATH.dirname(old_path);var new_dirname=PATH.dirname(new_path);var old_name=PATH.basename(old_path);var new_name=PATH.basename(new_path);var lookup,old_dir,new_dir;try{lookup=FS.lookupPath(old_path,{parent:true});old_dir=lookup.node;lookup=FS.lookupPath(new_path,{parent:true});new_dir=lookup.node}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(!old_dir||!new_dir)throw new FS.ErrnoError(ERRNO_CODES.ENOENT);if(old_dir.mount!==new_dir.mount){throw new FS.ErrnoError(ERRNO_CODES.EXDEV)}var old_node=FS.lookupNode(old_dir,old_name);var relative=PATH.relative(old_path,new_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}relative=PATH.relative(new_path,old_dirname);if(relative.charAt(0)!=="."){throw new FS.ErrnoError(ERRNO_CODES.ENOTEMPTY)}var new_node;try{new_node=FS.lookupNode(new_dir,new_name)}catch(e){}if(old_node===new_node){return}var isdir=FS.isDir(old_node.mode);var err=FS.mayDelete(old_dir,old_name,isdir);if(err){throw new FS.ErrnoError(err)}err=new_node?FS.mayDelete(new_dir,new_name,isdir):FS.mayCreate(new_dir,new_name);if(err){throw new FS.ErrnoError(err)}if(!old_dir.node_ops.rename){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(old_node)||new_node&&FS.isMountpoint(new_node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}if(new_dir!==old_dir){err=FS.nodePermissions(old_dir,"w");if(err){throw new FS.ErrnoError(err)}}try{if(FS.trackingDelegate["willMovePath"]){FS.trackingDelegate["willMovePath"](old_path,new_path)}}catch(e){console.log("FS.trackingDelegate['willMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}FS.hashRemoveNode(old_node);try{old_dir.node_ops.rename(old_node,new_dir,new_name)}catch(e){throw e}finally{FS.hashAddNode(old_node)}try{if(FS.trackingDelegate["onMovePath"])FS.trackingDelegate["onMovePath"](old_path,new_path)}catch(e){console.log("FS.trackingDelegate['onMovePath']('"+old_path+"', '"+new_path+"') threw an exception: "+e.message)}}),rmdir:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,true);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.rmdir){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.rmdir(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;if(!node.node_ops.readdir){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}return node.node_ops.readdir(node)}),unlink:(function(path){var lookup=FS.lookupPath(path,{parent:true});var parent=lookup.node;var name=PATH.basename(path);var node=FS.lookupNode(parent,name);var err=FS.mayDelete(parent,name,false);if(err){throw new FS.ErrnoError(err)}if(!parent.node_ops.unlink){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isMountpoint(node)){throw new FS.ErrnoError(ERRNO_CODES.EBUSY)}try{if(FS.trackingDelegate["willDeletePath"]){FS.trackingDelegate["willDeletePath"](path)}}catch(e){console.log("FS.trackingDelegate['willDeletePath']('"+path+"') threw an exception: "+e.message)}parent.node_ops.unlink(parent,name);FS.destroyNode(node);try{if(FS.trackingDelegate["onDeletePath"])FS.trackingDelegate["onDeletePath"](path)}catch(e){console.log("FS.trackingDelegate['onDeletePath']('"+path+"') threw an exception: "+e.message)}}),readlink:(function(path){var lookup=FS.lookupPath(path);var link=lookup.node;if(!link){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!link.node_ops.readlink){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}return PATH.resolve(FS.getPath(link.parent),link.node_ops.readlink(link))}),stat:(function(path,dontFollow){var lookup=FS.lookupPath(path,{follow:!dontFollow});var node=lookup.node;if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!node.node_ops.getattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}return node.node_ops.getattr(node)}),lstat:(function(path){return FS.stat(path,true)}),chmod:(function(path,mode,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{mode:mode&4095|node.mode&~4095,timestamp:Date.now()})}),lchmod:(function(path,mode){FS.chmod(path,mode,true)}),fchmod:(function(fd,mode){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chmod(stream.node,mode)}),chown:(function(path,uid,gid,dontFollow){var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:!dontFollow});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}node.node_ops.setattr(node,{timestamp:Date.now()})}),lchown:(function(path,uid,gid){FS.chown(path,uid,gid,true)}),fchown:(function(fd,uid,gid){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}FS.chown(stream.node,uid,gid)}),truncate:(function(path,len){if(len<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var node;if(typeof path==="string"){var lookup=FS.lookupPath(path,{follow:true});node=lookup.node}else{node=path}if(!node.node_ops.setattr){throw new FS.ErrnoError(ERRNO_CODES.EPERM)}if(FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!FS.isFile(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var err=FS.nodePermissions(node,"w");if(err){throw new FS.ErrnoError(err)}node.node_ops.setattr(node,{size:len,timestamp:Date.now()})}),ftruncate:(function(fd,len){var stream=FS.getStream(fd);if(!stream){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}FS.truncate(stream.node,len)}),utime:(function(path,atime,mtime){var lookup=FS.lookupPath(path,{follow:true});var node=lookup.node;node.node_ops.setattr(node,{timestamp:Math.max(atime,mtime)})}),open:(function(path,flags,mode,fd_start,fd_end){if(path===""){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}flags=typeof flags==="string"?FS.modeStringToFlags(flags):flags;mode=typeof mode==="undefined"?438:mode;if(flags&64){mode=mode&4095|32768}else{mode=0}var node;if(typeof path==="object"){node=path}else{path=PATH.normalize(path);try{var lookup=FS.lookupPath(path,{follow:!(flags&131072)});node=lookup.node}catch(e){}}var created=false;if(flags&64){if(node){if(flags&128){throw new FS.ErrnoError(ERRNO_CODES.EEXIST)}}else{node=FS.mknod(path,mode,0);created=true}}if(!node){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(FS.isChrdev(node.mode)){flags&=~512}if(flags&65536&&!FS.isDir(node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}if(!created){var err=FS.mayOpen(node,flags);if(err){throw new FS.ErrnoError(err)}}if(flags&512){FS.truncate(node,0)}flags&=~(128|512);var stream=FS.createStream({node:node,path:FS.getPath(node),flags:flags,seekable:true,position:0,stream_ops:node.stream_ops,ungotten:[],error:false},fd_start,fd_end);if(stream.stream_ops.open){stream.stream_ops.open(stream)}if(Module["logReadFiles"]&&!(flags&1)){if(!FS.readFiles)FS.readFiles={};if(!(path in FS.readFiles)){FS.readFiles[path]=1;Module["printErr"]("read file: "+path)}}try{if(FS.trackingDelegate["onOpenFile"]){var trackingFlags=0;if((flags&2097155)!==1){trackingFlags|=FS.tracking.openFlags.READ}if((flags&2097155)!==0){trackingFlags|=FS.tracking.openFlags.WRITE}FS.trackingDelegate["onOpenFile"](path,trackingFlags)}}catch(e){console.log("FS.trackingDelegate['onOpenFile']('"+path+"', flags) threw an exception: "+e.message)}return stream}),close:(function(stream){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(stream.getdents)stream.getdents=null;try{if(stream.stream_ops.close){stream.stream_ops.close(stream)}}catch(e){throw e}finally{FS.closeStream(stream.fd)}stream.fd=null}),isClosed:(function(stream){return stream.fd===null}),llseek:(function(stream,offset,whence){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!stream.seekable||!stream.stream_ops.llseek){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}stream.position=stream.stream_ops.llseek(stream,offset,whence);stream.ungotten=[];return stream.position}),read:(function(stream,buffer,offset,length,position){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.read){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesRead=stream.stream_ops.read(stream,buffer,offset,length,position);if(!seeking)stream.position+=bytesRead;return bytesRead}),write:(function(stream,buffer,offset,length,position,canOwn){if(length<0||position<0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.EISDIR)}if(!stream.stream_ops.write){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if(stream.flags&1024){FS.llseek(stream,0,2)}var seeking=typeof position!=="undefined";if(!seeking){position=stream.position}else if(!stream.seekable){throw new FS.ErrnoError(ERRNO_CODES.ESPIPE)}var bytesWritten=stream.stream_ops.write(stream,buffer,offset,length,position,canOwn);if(!seeking)stream.position+=bytesWritten;try{if(stream.path&&FS.trackingDelegate["onWriteToFile"])FS.trackingDelegate["onWriteToFile"](stream.path)}catch(e){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+e.message)}return bytesWritten}),allocate:(function(stream,offset,length){if(FS.isClosed(stream)){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(offset<0||length<=0){throw new FS.ErrnoError(ERRNO_CODES.EINVAL)}if((stream.flags&2097155)===0){throw new FS.ErrnoError(ERRNO_CODES.EBADF)}if(!FS.isFile(stream.node.mode)&&!FS.isDir(stream.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}if(!stream.stream_ops.allocate){throw new FS.ErrnoError(ERRNO_CODES.EOPNOTSUPP)}stream.stream_ops.allocate(stream,offset,length)}),mmap:(function(stream,buffer,offset,length,position,prot,flags){if((stream.flags&2097155)===1){throw new FS.ErrnoError(ERRNO_CODES.EACCES)}if(!stream.stream_ops.mmap){throw new FS.ErrnoError(ERRNO_CODES.ENODEV)}return stream.stream_ops.mmap(stream,buffer,offset,length,position,prot,flags)}),msync:(function(stream,buffer,offset,length,mmapFlags){if(!stream||!stream.stream_ops.msync){return 0}return stream.stream_ops.msync(stream,buffer,offset,length,mmapFlags)}),munmap:(function(stream){return 0}),ioctl:(function(stream,cmd,arg){if(!stream.stream_ops.ioctl){throw new FS.ErrnoError(ERRNO_CODES.ENOTTY)}return stream.stream_ops.ioctl(stream,cmd,arg)}),readFile:(function(path,opts){opts=opts||{};opts.flags=opts.flags||"r";opts.encoding=opts.encoding||"binary";if(opts.encoding!=="utf8"&&opts.encoding!=="binary"){throw new Error('Invalid encoding type "'+opts.encoding+'"')}var ret;var stream=FS.open(path,opts.flags);var stat=FS.stat(path);var length=stat.size;var buf=new Uint8Array(length);FS.read(stream,buf,0,length,0);if(opts.encoding==="utf8"){ret=UTF8ArrayToString(buf,0)}else if(opts.encoding==="binary"){ret=buf}FS.close(stream);return ret}),writeFile:(function(path,data,opts){opts=opts||{};opts.flags=opts.flags||"w";var stream=FS.open(path,opts.flags,opts.mode);if(typeof data==="string"){var buf=new Uint8Array(lengthBytesUTF8(data)+1);var actualNumBytes=stringToUTF8Array(data,buf,0,buf.length);FS.write(stream,buf,0,actualNumBytes,undefined,opts.canOwn)}else if(ArrayBuffer.isView(data)){FS.write(stream,data,0,data.byteLength,undefined,opts.canOwn)}else{throw new Error("Unsupported data type")}FS.close(stream)}),cwd:(function(){return FS.currentPath}),chdir:(function(path){var lookup=FS.lookupPath(path,{follow:true});if(lookup.node===null){throw new FS.ErrnoError(ERRNO_CODES.ENOENT)}if(!FS.isDir(lookup.node.mode)){throw new FS.ErrnoError(ERRNO_CODES.ENOTDIR)}var err=FS.nodePermissions(lookup.node,"x");if(err){throw new FS.ErrnoError(err)}FS.currentPath=lookup.path}),createDefaultDirectories:(function(){FS.mkdir("/tmp");FS.mkdir("/home");FS.mkdir("/home/web_user")}),createDefaultDevices:(function(){FS.mkdir("/dev");FS.registerDevice(FS.makedev(1,3),{read:(function(){return 0}),write:(function(stream,buffer,offset,length,pos){return length})});FS.mkdev("/dev/null",FS.makedev(1,3));TTY.register(FS.makedev(5,0),TTY.default_tty_ops);TTY.register(FS.makedev(6,0),TTY.default_tty1_ops);FS.mkdev("/dev/tty",FS.makedev(5,0));FS.mkdev("/dev/tty1",FS.makedev(6,0));var random_device;if(typeof crypto!=="undefined"){var randomBuffer=new Uint8Array(1);random_device=(function(){crypto.getRandomValues(randomBuffer);return randomBuffer[0]})}else if(ENVIRONMENT_IS_NODE){random_device=(function(){return console.log("crypto")["randomBytes"](1)[0]})}else{random_device=(function(){return Math.random()*256|0})}FS.createDevice("/dev","random",random_device);FS.createDevice("/dev","urandom",random_device);FS.mkdir("/dev/shm");FS.mkdir("/dev/shm/tmp")}),createSpecialDirectories:(function(){FS.mkdir("/proc");FS.mkdir("/proc/self");FS.mkdir("/proc/self/fd");FS.mount({mount:(function(){var node=FS.createNode("/proc/self","fd",16384|511,73);node.node_ops={lookup:(function(parent,name){var fd=+name;var stream=FS.getStream(fd);if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);var ret={parent:null,mount:{mountpoint:"fake"},node_ops:{readlink:(function(){return stream.path})}};ret.parent=ret;return ret})};return node})},{},"/proc/self/fd")}),createStandardStreams:(function(){if(Module["stdin"]){FS.createDevice("/dev","stdin",Module["stdin"])}else{FS.symlink("/dev/tty","/dev/stdin")}if(Module["stdout"]){FS.createDevice("/dev","stdout",null,Module["stdout"])}else{FS.symlink("/dev/tty","/dev/stdout")}if(Module["stderr"]){FS.createDevice("/dev","stderr",null,Module["stderr"])}else{FS.symlink("/dev/tty1","/dev/stderr")}var stdin=FS.open("/dev/stdin","r");assert(stdin.fd===0,"invalid handle for stdin ("+stdin.fd+")");var stdout=FS.open("/dev/stdout","w");assert(stdout.fd===1,"invalid handle for stdout ("+stdout.fd+")");var stderr=FS.open("/dev/stderr","w");assert(stderr.fd===2,"invalid handle for stderr ("+stderr.fd+")")}),ensureErrnoError:(function(){if(FS.ErrnoError)return;FS.ErrnoError=function ErrnoError(errno,node){this.node=node;this.setErrno=(function(errno){this.errno=errno;for(var key in ERRNO_CODES){if(ERRNO_CODES[key]===errno){this.code=key;break}}});this.setErrno(errno);this.message=ERRNO_MESSAGES[errno];if(this.stack)Object.defineProperty(this,"stack",{value:(new Error).stack,writable:true})};FS.ErrnoError.prototype=new Error;FS.ErrnoError.prototype.constructor=FS.ErrnoError;[ERRNO_CODES.ENOENT].forEach((function(code){FS.genericErrors[code]=new FS.ErrnoError(code);FS.genericErrors[code].stack="<generic error, no stack>"}))}),staticInit:(function(){FS.ensureErrnoError();FS.nameTable=new Array(4096);FS.mount(MEMFS,{},"/");FS.createDefaultDirectories();FS.createDefaultDevices();FS.createSpecialDirectories();FS.filesystems={"MEMFS":MEMFS,"IDBFS":IDBFS,"NODEFS":NODEFS,"WORKERFS":WORKERFS}}),init:(function(input,output,error){assert(!FS.init.initialized,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");FS.init.initialized=true;FS.ensureErrnoError();Module["stdin"]=input||Module["stdin"];Module["stdout"]=output||Module["stdout"];Module["stderr"]=error||Module["stderr"];FS.createStandardStreams()}),quit:(function(){FS.init.initialized=false;var fflush=Module["_fflush"];if(fflush)fflush(0);for(var i=0;i<FS.streams.length;i++){var stream=FS.streams[i];if(!stream){continue}FS.close(stream)}}),getMode:(function(canRead,canWrite){var mode=0;if(canRead)mode|=292|73;if(canWrite)mode|=146;return mode}),joinPath:(function(parts,forceRelative){var path=PATH.join.apply(null,parts);if(forceRelative&&path[0]=="/")path=path.substr(1);return path}),absolutePath:(function(relative,base){return PATH.resolve(base,relative)}),standardizePath:(function(path){return PATH.normalize(path)}),findObject:(function(path,dontResolveLastLink){var ret=FS.analyzePath(path,dontResolveLastLink);if(ret.exists){return ret.object}else{___setErrNo(ret.error);return null}}),analyzePath:(function(path,dontResolveLastLink){try{var lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});path=lookup.path}catch(e){}var ret={isRoot:false,exists:false,error:0,name:null,path:null,object:null,parentExists:false,parentPath:null,parentObject:null};try{var lookup=FS.lookupPath(path,{parent:true});ret.parentExists=true;ret.parentPath=lookup.path;ret.parentObject=lookup.node;ret.name=PATH.basename(path);lookup=FS.lookupPath(path,{follow:!dontResolveLastLink});ret.exists=true;ret.path=lookup.path;ret.object=lookup.node;ret.name=lookup.node.name;ret.isRoot=lookup.path==="/"}catch(e){ret.error=e.errno}return ret}),createFolder:(function(parent,name,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.mkdir(path,mode)}),createPath:(function(parent,path,canRead,canWrite){parent=typeof parent==="string"?parent:FS.getPath(parent);var parts=path.split("/").reverse();while(parts.length){var part=parts.pop();if(!part)continue;var current=PATH.join2(parent,part);try{FS.mkdir(current)}catch(e){}parent=current}return current}),createFile:(function(parent,name,properties,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(canRead,canWrite);return FS.create(path,mode)}),createDataFile:(function(parent,name,data,canRead,canWrite,canOwn){var path=name?PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name):parent;var mode=FS.getMode(canRead,canWrite);var node=FS.create(path,mode);if(data){if(typeof data==="string"){var arr=new Array(data.length);for(var i=0,len=data.length;i<len;++i)arr[i]=data.charCodeAt(i);data=arr}FS.chmod(node,mode|146);var stream=FS.open(node,"w");FS.write(stream,data,0,data.length,0,canOwn);FS.close(stream);FS.chmod(node,mode)}return node}),createDevice:(function(parent,name,input,output){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);var mode=FS.getMode(!!input,!!output);if(!FS.createDevice.major)FS.createDevice.major=64;var dev=FS.makedev(FS.createDevice.major++,0);FS.registerDevice(dev,{open:(function(stream){stream.seekable=false}),close:(function(stream){if(output&&output.buffer&&output.buffer.length){output(10)}}),read:(function(stream,buffer,offset,length,pos){var bytesRead=0;for(var i=0;i<length;i++){var result;try{result=input()}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}if(result===undefined&&bytesRead===0){throw new FS.ErrnoError(ERRNO_CODES.EAGAIN)}if(result===null||result===undefined)break;bytesRead++;buffer[offset+i]=result}if(bytesRead){stream.node.timestamp=Date.now()}return bytesRead}),write:(function(stream,buffer,offset,length,pos){for(var i=0;i<length;i++){try{output(buffer[offset+i])}catch(e){throw new FS.ErrnoError(ERRNO_CODES.EIO)}}if(length){stream.node.timestamp=Date.now()}return i})});return FS.mkdev(path,mode,dev)}),createLink:(function(parent,name,target,canRead,canWrite){var path=PATH.join2(typeof parent==="string"?parent:FS.getPath(parent),name);return FS.symlink(target,path)}),forceLoadFile:(function(obj){if(obj.isDevice||obj.isFolder||obj.link||obj.contents)return true;var success=true;if(typeof XMLHttpRequest!=="undefined"){throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.")}else if(Module["read"]){try{obj.contents=intArrayFromString(Module["read"](obj.url),true);obj.usedBytes=obj.contents.length}catch(e){success=false}}else{throw new Error("Cannot load without read() or XMLHttpRequest.")}if(!success)___setErrNo(ERRNO_CODES.EIO);return success}),createLazyFile:(function(parent,name,url,canRead,canWrite){function LazyUint8Array(){this.lengthKnown=false;this.chunks=[]}LazyUint8Array.prototype.get=function LazyUint8Array_get(idx){if(idx>this.length-1||idx<0){return undefined}var chunkOffset=idx%this.chunkSize;var chunkNum=idx/this.chunkSize|0;return this.getter(chunkNum)[chunkOffset]};LazyUint8Array.prototype.setDataGetter=function LazyUint8Array_setDataGetter(getter){this.getter=getter};LazyUint8Array.prototype.cacheLength=function LazyUint8Array_cacheLength(){var xhr=new XMLHttpRequest;xhr.open("HEAD",url,false);xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);var datalength=Number(xhr.getResponseHeader("Content-length"));var header;var hasByteServing=(header=xhr.getResponseHeader("Accept-Ranges"))&&header==="bytes";var usesGzip=(header=xhr.getResponseHeader("Content-Encoding"))&&header==="gzip";var chunkSize=1024*1024;if(!hasByteServing)chunkSize=datalength;var doXHR=(function(from,to){if(from>to)throw new Error("invalid range ("+from+", "+to+") or no bytes requested!");if(to>datalength-1)throw new Error("only "+datalength+" bytes available! programmer error!");var xhr=new XMLHttpRequest;xhr.open("GET",url,false);if(datalength!==chunkSize)xhr.setRequestHeader("Range","bytes="+from+"-"+to);if(typeof Uint8Array!="undefined")xhr.responseType="arraybuffer";if(xhr.overrideMimeType){xhr.overrideMimeType("text/plain; charset=x-user-defined")}xhr.send(null);if(!(xhr.status>=200&&xhr.status<300||xhr.status===304))throw new Error("Couldn't load "+url+". Status: "+xhr.status);if(xhr.response!==undefined){return new Uint8Array(xhr.response||[])}else{return intArrayFromString(xhr.responseText||"",true)}});var lazyArray=this;lazyArray.setDataGetter((function(chunkNum){var start=chunkNum*chunkSize;var end=(chunkNum+1)*chunkSize-1;end=Math.min(end,datalength-1);if(typeof lazyArray.chunks[chunkNum]==="undefined"){lazyArray.chunks[chunkNum]=doXHR(start,end)}if(typeof lazyArray.chunks[chunkNum]==="undefined")throw new Error("doXHR failed!");return lazyArray.chunks[chunkNum]}));if(usesGzip||!datalength){chunkSize=datalength=1;datalength=this.getter(0).length;chunkSize=datalength;console.log("LazyFiles on gzip forces download of the whole file when length is accessed")}this._length=datalength;this._chunkSize=chunkSize;this.lengthKnown=true};if(typeof XMLHttpRequest!=="undefined"){if(!ENVIRONMENT_IS_WORKER)throw"Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";var lazyArray=new LazyUint8Array;Object.defineProperties(lazyArray,{length:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._length})},chunkSize:{get:(function(){if(!this.lengthKnown){this.cacheLength()}return this._chunkSize})}});var properties={isDevice:false,contents:lazyArray}}else{var properties={isDevice:false,url:url}}var node=FS.createFile(parent,name,properties,canRead,canWrite);if(properties.contents){node.contents=properties.contents}else if(properties.url){node.contents=null;node.url=properties.url}Object.defineProperties(node,{usedBytes:{get:(function(){return this.contents.length})}});var stream_ops={};var keys=Object.keys(node.stream_ops);keys.forEach((function(key){var fn=node.stream_ops[key];stream_ops[key]=function forceLoadLazyFile(){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}return fn.apply(null,arguments)}}));stream_ops.read=function stream_ops_read(stream,buffer,offset,length,position){if(!FS.forceLoadFile(node)){throw new FS.ErrnoError(ERRNO_CODES.EIO)}var contents=stream.node.contents;if(position>=contents.length)return 0;var size=Math.min(contents.length-position,length);assert(size>=0);if(contents.slice){for(var i=0;i<size;i++){buffer[offset+i]=contents[position+i]}}else{for(var i=0;i<size;i++){buffer[offset+i]=contents.get(position+i)}}return size};node.stream_ops=stream_ops;return node}),createPreloadedFile:(function(parent,name,url,canRead,canWrite,onload,onerror,dontCreateFile,canOwn,preFinish){Browser.init();var fullname=name?PATH.resolve(PATH.join2(parent,name)):parent;var dep=getUniqueRunDependency("cp "+fullname);function processData(byteArray){function finish(byteArray){if(preFinish)preFinish();if(!dontCreateFile){FS.createDataFile(parent,name,byteArray,canRead,canWrite,canOwn)}if(onload)onload();removeRunDependency(dep)}var handled=false;Module["preloadPlugins"].forEach((function(plugin){if(handled)return;if(plugin["canHandle"](fullname)){plugin["handle"](byteArray,fullname,finish,(function(){if(onerror)onerror();removeRunDependency(dep)}));handled=true}}));if(!handled)finish(byteArray)}addRunDependency(dep);if(typeof url=="string"){Browser.asyncLoad(url,(function(byteArray){processData(byteArray)}),onerror)}else{processData(url)}}),indexedDB:(function(){return window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB}),DB_NAME:(function(){return"EM_FS_"+window.location.pathname}),DB_VERSION:20,DB_STORE_NAME:"FILE_DATA",saveFilesToDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=function openRequest_onupgradeneeded(){console.log("creating db");var db=openRequest.result;db.createObjectStore(FS.DB_STORE_NAME)};openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;var transaction=db.transaction([FS.DB_STORE_NAME],"readwrite");var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var putRequest=files.put(FS.analyzePath(path).object.contents,path);putRequest.onsuccess=function putRequest_onsuccess(){ok++;if(ok+fail==total)finish()};putRequest.onerror=function putRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror}),loadFilesFromDB:(function(paths,onload,onerror){onload=onload||(function(){});onerror=onerror||(function(){});var indexedDB=FS.indexedDB();try{var openRequest=indexedDB.open(FS.DB_NAME(),FS.DB_VERSION)}catch(e){return onerror(e)}openRequest.onupgradeneeded=onerror;openRequest.onsuccess=function openRequest_onsuccess(){var db=openRequest.result;try{var transaction=db.transaction([FS.DB_STORE_NAME],"readonly")}catch(e){onerror(e);return}var files=transaction.objectStore(FS.DB_STORE_NAME);var ok=0,fail=0,total=paths.length;function finish(){if(fail==0)onload();else onerror()}paths.forEach((function(path){var getRequest=files.get(path);getRequest.onsuccess=function getRequest_onsuccess(){if(FS.analyzePath(path).exists){FS.unlink(path)}FS.createDataFile(PATH.dirname(path),PATH.basename(path),getRequest.result,true,true,true);ok++;if(ok+fail==total)finish()};getRequest.onerror=function getRequest_onerror(){fail++;if(ok+fail==total)finish()}}));transaction.onerror=onerror};openRequest.onerror=onerror})};var SYSCALLS={DEFAULT_POLLMASK:5,mappings:{},umask:511,calculateAt:(function(dirfd,path){if(path[0]!=="/"){var dir;if(dirfd===-100){dir=FS.cwd()}else{var dirstream=FS.getStream(dirfd);if(!dirstream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);dir=dirstream.path}path=PATH.join2(dir,path)}return path}),doStat:(function(func,path,buf){try{var stat=func(path)}catch(e){if(e&&e.node&&PATH.normalize(path)!==PATH.normalize(FS.getPath(e.node))){return-ERRNO_CODES.ENOTDIR}throw e}HEAP32[buf>>2]=stat.dev;HEAP32[buf+4>>2]=0;HEAP32[buf+8>>2]=stat.ino;HEAP32[buf+12>>2]=stat.mode;HEAP32[buf+16>>2]=stat.nlink;HEAP32[buf+20>>2]=stat.uid;HEAP32[buf+24>>2]=stat.gid;HEAP32[buf+28>>2]=stat.rdev;HEAP32[buf+32>>2]=0;HEAP32[buf+36>>2]=stat.size;HEAP32[buf+40>>2]=4096;HEAP32[buf+44>>2]=stat.blocks;HEAP32[buf+48>>2]=stat.atime.getTime()/1e3|0;HEAP32[buf+52>>2]=0;HEAP32[buf+56>>2]=stat.mtime.getTime()/1e3|0;HEAP32[buf+60>>2]=0;HEAP32[buf+64>>2]=stat.ctime.getTime()/1e3|0;HEAP32[buf+68>>2]=0;HEAP32[buf+72>>2]=stat.ino;return 0}),doMsync:(function(addr,stream,len,flags){var buffer=new Uint8Array(HEAPU8.subarray(addr,addr+len));FS.msync(stream,buffer,0,len,flags)}),doMkdir:(function(path,mode){path=PATH.normalize(path);if(path[path.length-1]==="/")path=path.substr(0,path.length-1);FS.mkdir(path,mode,0);return 0}),doMknod:(function(path,mode,dev){switch(mode&61440){case 32768:case 8192:case 24576:case 4096:case 49152:break;default:return-ERRNO_CODES.EINVAL}FS.mknod(path,mode,dev);return 0}),doReadlink:(function(path,buf,bufsize){if(bufsize<=0)return-ERRNO_CODES.EINVAL;var ret=FS.readlink(path);var len=Math.min(bufsize,lengthBytesUTF8(ret));var endChar=HEAP8[buf+len];stringToUTF8(ret,buf,bufsize+1);HEAP8[buf+len]=endChar;return len}),doAccess:(function(path,amode){if(amode&~7){return-ERRNO_CODES.EINVAL}var node;var lookup=FS.lookupPath(path,{follow:true});node=lookup.node;var perms="";if(amode&4)perms+="r";if(amode&2)perms+="w";if(amode&1)perms+="x";if(perms&&FS.nodePermissions(node,perms)){return-ERRNO_CODES.EACCES}return 0}),doDup:(function(path,flags,suggestFD){var suggest=FS.getStream(suggestFD);if(suggest)FS.close(suggest);return FS.open(path,flags,0,suggestFD,suggestFD).fd}),doReadv:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.read(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr;if(curr<len)break}return ret}),doWritev:(function(stream,iov,iovcnt,offset){var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];var curr=FS.write(stream,HEAP8,ptr,len,offset);if(curr<0)return-1;ret+=curr}return ret}),varargs:0,get:(function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret}),getStr:(function(){var ret=Pointer_stringify(SYSCALLS.get());return ret}),getStreamFromFD:(function(){var stream=FS.getStream(SYSCALLS.get());if(!stream)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return stream}),getSocketFromFD:(function(){var socket=SOCKFS.getSocket(SYSCALLS.get());if(!socket)throw new FS.ErrnoError(ERRNO_CODES.EBADF);return socket}),getSocketAddress:(function(allowNull){var addrp=SYSCALLS.get(),addrlen=SYSCALLS.get();if(allowNull&&addrp===0)return null;var info=__read_sockaddr(addrp,addrlen);if(info.errno)throw new FS.ErrnoError(info.errno);info.addr=DNS.lookup_addr(info.addr)||info.addr;return info}),get64:(function(){var low=SYSCALLS.get(),high=SYSCALLS.get();if(low>=0)assert(high===0);else assert(high===-1);return low}),getZero:(function(){assert(SYSCALLS.get()===0)})};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();var offset=offset_low;FS.llseek(stream,offset,whence);HEAP32[result>>2]=stream.position;if(stream.getdents&&offset===0&&whence===0)stream.getdents=null;return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall145(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doReadv(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();return SYSCALLS.doWritev(stream,iov,iovcnt)}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall54(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),op=SYSCALLS.get();switch(op){case 21509:case 21505:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21519:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;var argp=SYSCALLS.get();HEAP32[argp>>2]=0;return 0};case 21520:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return-ERRNO_CODES.EINVAL};case 21531:{var argp=SYSCALLS.get();return FS.ioctl(stream,op,argp)};case 21523:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};case 21524:{if(!stream.tty)return-ERRNO_CODES.ENOTTY;return 0};default:abort("bad ioctl syscall "+op)}}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();FS.close(stream);return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall91(which,varargs){SYSCALLS.varargs=varargs;try{var addr=SYSCALLS.get(),len=SYSCALLS.get();var info=SYSCALLS.mappings[addr];if(!info)return 0;if(len===info.len){var stream=FS.getStream(info.fd);SYSCALLS.doMsync(addr,stream,len,info.flags);FS.munmap(stream);SYSCALLS.mappings[addr]=null;if(info.allocated){_free(info.malloc)}}return 0}catch(e){if(typeof FS==="undefined"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___unlock(){}function _abort(){Module["abort"]()}function _difftime(time1,time0){return time1-time0}var _environ=STATICTOP;STATICTOP+=16;function ___buildEnvironment(env){var MAX_ENV_VALUES=64;var TOTAL_ENV_SIZE=1024;var poolPtr;var envPtr;if(!___buildEnvironment.called){___buildEnvironment.called=true;ENV["USER"]=ENV["LOGNAME"]="web_user";ENV["PATH"]="/";ENV["PWD"]="/";ENV["HOME"]="/home/web_user";ENV["LANG"]="C.UTF-8";ENV["_"]=Module["thisProgram"];poolPtr=staticAlloc(TOTAL_ENV_SIZE);envPtr=staticAlloc(MAX_ENV_VALUES*4);HEAP32[envPtr>>2]=poolPtr;HEAP32[_environ>>2]=envPtr}else{envPtr=HEAP32[_environ>>2];poolPtr=HEAP32[envPtr>>2]}var strings=[];var totalSize=0;for(var key in env){if(typeof env[key]==="string"){var line=key+"="+env[key];strings.push(line);totalSize+=line.length}}if(totalSize>TOTAL_ENV_SIZE){throw new Error("Environment size exceeded TOTAL_ENV_SIZE!")}var ptrSize=4;for(var i=0;i<strings.length;i++){var line=strings[i];writeAsciiToMemory(line,poolPtr);HEAP32[envPtr+i*ptrSize>>2]=poolPtr;poolPtr+=line.length+1}HEAP32[envPtr+strings.length*ptrSize>>2]=0}var ENV={};function _getenv(name){if(name===0)return 0;name=Pointer_stringify(name);if(!ENV.hasOwnProperty(name))return 0;if(_getenv.ret)_free(_getenv.ret);_getenv.ret=allocateUTF8(ENV[name]);return _getenv.ret}function _llvm_bswap_i64(l,h){var retl=_llvm_bswap_i32(h)>>>0;var reth=_llvm_bswap_i32(l)>>>0;return(setTempRet0(reth),retl)|0}var _llvm_fabs_f32=Math_abs;var _llvm_fabs_f64=Math_abs;var _llvm_pow_f32=Math_pow;var _llvm_pow_f64=Math_pow;function _llvm_trap(){abort("trap!")}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest);return dest}function _pthread_cond_wait(){return 0}var PTHREAD_SPECIFIC={};function _pthread_getspecific(key){return PTHREAD_SPECIFIC[key]||0}var PTHREAD_SPECIFIC_NEXT_KEY=1;function _pthread_key_create(key,destructor){if(key==0){return ERRNO_CODES.EINVAL}HEAP32[key>>2]=PTHREAD_SPECIFIC_NEXT_KEY;PTHREAD_SPECIFIC[PTHREAD_SPECIFIC_NEXT_KEY]=0;PTHREAD_SPECIFIC_NEXT_KEY++;return 0}function _pthread_once(ptr,func){if(!_pthread_once.seen)_pthread_once.seen={};if(ptr in _pthread_once.seen)return;Module["dynCall_v"](func);_pthread_once.seen[ptr]=1}function _pthread_setspecific(key,value){if(!(key in PTHREAD_SPECIFIC)){return ERRNO_CODES.EINVAL}PTHREAD_SPECIFIC[key]=value;return 0}function __isLeapYear(year){return year%4===0&&(year%100!==0||year%400===0)}function __arraySum(array,index){var sum=0;for(var i=0;i<=index;sum+=array[i++]);return sum}var __MONTH_DAYS_LEAP=[31,29,31,30,31,30,31,31,30,31,30,31];var __MONTH_DAYS_REGULAR=[31,28,31,30,31,30,31,31,30,31,30,31];function __addDays(date,days){var newDate=new Date(date.getTime());while(days>0){var leap=__isLeapYear(newDate.getFullYear());var currentMonth=newDate.getMonth();var daysInCurrentMonth=(leap?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR)[currentMonth];if(days>daysInCurrentMonth-newDate.getDate()){days-=daysInCurrentMonth-newDate.getDate()+1;newDate.setDate(1);if(currentMonth<11){newDate.setMonth(currentMonth+1)}else{newDate.setMonth(0);newDate.setFullYear(newDate.getFullYear()+1)}}else{newDate.setDate(newDate.getDate()+days);return newDate}}return newDate}function _strftime(s,maxsize,format,tm){var tm_zone=HEAP32[tm+40>>2];var date={tm_sec:HEAP32[tm>>2],tm_min:HEAP32[tm+4>>2],tm_hour:HEAP32[tm+8>>2],tm_mday:HEAP32[tm+12>>2],tm_mon:HEAP32[tm+16>>2],tm_year:HEAP32[tm+20>>2],tm_wday:HEAP32[tm+24>>2],tm_yday:HEAP32[tm+28>>2],tm_isdst:HEAP32[tm+32>>2],tm_gmtoff:HEAP32[tm+36>>2],tm_zone:tm_zone?Pointer_stringify(tm_zone):""};var pattern=Pointer_stringify(format);var EXPANSION_RULES_1={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S"};for(var rule in EXPANSION_RULES_1){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_1[rule])}var WEEKDAYS=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];var MONTHS=["January","February","March","April","May","June","July","August","September","October","November","December"];function leadingSomething(value,digits,character){var str=typeof value==="number"?value.toString():value||"";while(str.length<digits){str=character[0]+str}return str}function leadingNulls(value,digits){return leadingSomething(value,digits,"0")}function compareByDay(date1,date2){function sgn(value){return value<0?-1:value>0?1:0}var compare;if((compare=sgn(date1.getFullYear()-date2.getFullYear()))===0){if((compare=sgn(date1.getMonth()-date2.getMonth()))===0){compare=sgn(date1.getDate()-date2.getDate())}}return compare}function getFirstWeekStartDate(janFourth){switch(janFourth.getDay()){case 0:return new Date(janFourth.getFullYear()-1,11,29);case 1:return janFourth;case 2:return new Date(janFourth.getFullYear(),0,3);case 3:return new Date(janFourth.getFullYear(),0,2);case 4:return new Date(janFourth.getFullYear(),0,1);case 5:return new Date(janFourth.getFullYear()-1,11,31);case 6:return new Date(janFourth.getFullYear()-1,11,30)}}function getWeekBasedYear(date){var thisDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);var janFourthThisYear=new Date(thisDate.getFullYear(),0,4);var janFourthNextYear=new Date(thisDate.getFullYear()+1,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);if(compareByDay(firstWeekStartThisYear,thisDate)<=0){if(compareByDay(firstWeekStartNextYear,thisDate)<=0){return thisDate.getFullYear()+1}else{return thisDate.getFullYear()}}else{return thisDate.getFullYear()-1}}var EXPANSION_RULES_2={"%a":(function(date){return WEEKDAYS[date.tm_wday].substring(0,3)}),"%A":(function(date){return WEEKDAYS[date.tm_wday]}),"%b":(function(date){return MONTHS[date.tm_mon].substring(0,3)}),"%B":(function(date){return MONTHS[date.tm_mon]}),"%C":(function(date){var year=date.tm_year+1900;return leadingNulls(year/100|0,2)}),"%d":(function(date){return leadingNulls(date.tm_mday,2)}),"%e":(function(date){return leadingSomething(date.tm_mday,2," ")}),"%g":(function(date){return getWeekBasedYear(date).toString().substring(2)}),"%G":(function(date){return getWeekBasedYear(date)}),"%H":(function(date){return leadingNulls(date.tm_hour,2)}),"%I":(function(date){var twelveHour=date.tm_hour;if(twelveHour==0)twelveHour=12;else if(twelveHour>12)twelveHour-=12;return leadingNulls(twelveHour,2)}),"%j":(function(date){return leadingNulls(date.tm_mday+__arraySum(__isLeapYear(date.tm_year+1900)?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,date.tm_mon-1),3)}),"%m":(function(date){return leadingNulls(date.tm_mon+1,2)}),"%M":(function(date){return leadingNulls(date.tm_min,2)}),"%n":(function(){return"\n"}),"%p":(function(date){if(date.tm_hour>=0&&date.tm_hour<12){return"AM"}else{return"PM"}}),"%S":(function(date){return leadingNulls(date.tm_sec,2)}),"%t":(function(){return"\t"}),"%u":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()||7}),"%U":(function(date){var janFirst=new Date(date.tm_year+1900,0,1);var firstSunday=janFirst.getDay()===0?janFirst:__addDays(janFirst,7-janFirst.getDay());var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstSunday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstSundayUntilEndJanuary=31-firstSunday.getDate();var days=firstSundayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstSunday,janFirst)===0?"01":"00"}),"%V":(function(date){var janFourthThisYear=new Date(date.tm_year+1900,0,4);var janFourthNextYear=new Date(date.tm_year+1901,0,4);var firstWeekStartThisYear=getFirstWeekStartDate(janFourthThisYear);var firstWeekStartNextYear=getFirstWeekStartDate(janFourthNextYear);var endDate=__addDays(new Date(date.tm_year+1900,0,1),date.tm_yday);if(compareByDay(endDate,firstWeekStartThisYear)<0){return"53"}if(compareByDay(firstWeekStartNextYear,endDate)<=0){return"01"}var daysDifference;if(firstWeekStartThisYear.getFullYear()<date.tm_year+1900){daysDifference=date.tm_yday+32-firstWeekStartThisYear.getDate()}else{daysDifference=date.tm_yday+1-firstWeekStartThisYear.getDate()}return leadingNulls(Math.ceil(daysDifference/7),2)}),"%w":(function(date){var day=new Date(date.tm_year+1900,date.tm_mon+1,date.tm_mday,0,0,0,0);return day.getDay()}),"%W":(function(date){var janFirst=new Date(date.tm_year,0,1);var firstMonday=janFirst.getDay()===1?janFirst:__addDays(janFirst,janFirst.getDay()===0?1:7-janFirst.getDay()+1);var endDate=new Date(date.tm_year+1900,date.tm_mon,date.tm_mday);if(compareByDay(firstMonday,endDate)<0){var februaryFirstUntilEndMonth=__arraySum(__isLeapYear(endDate.getFullYear())?__MONTH_DAYS_LEAP:__MONTH_DAYS_REGULAR,endDate.getMonth()-1)-31;var firstMondayUntilEndJanuary=31-firstMonday.getDate();var days=firstMondayUntilEndJanuary+februaryFirstUntilEndMonth+endDate.getDate();return leadingNulls(Math.ceil(days/7),2)}return compareByDay(firstMonday,janFirst)===0?"01":"00"}),"%y":(function(date){return(date.tm_year+1900).toString().substring(2)}),"%Y":(function(date){return date.tm_year+1900}),"%z":(function(date){var off=date.tm_gmtoff;var ahead=off>=0;off=Math.abs(off)/60;off=off/60*100+off%60;return(ahead?"+":"-")+String("0000"+off).slice(-4)}),"%Z":(function(date){return date.tm_zone}),"%%":(function(){return"%"})};for(var rule in EXPANSION_RULES_2){if(pattern.indexOf(rule)>=0){pattern=pattern.replace(new RegExp(rule,"g"),EXPANSION_RULES_2[rule](date))}}var bytes=intArrayFromString(pattern,false);if(bytes.length>maxsize){return 0}writeArrayToMemory(bytes,s);return bytes.length-1}function _strftime_l(s,maxsize,format,tm){return _strftime(s,maxsize,format,tm)}function _time(ptr){var ret=Date.now()/1e3|0;if(ptr){HEAP32[ptr>>2]=ret}return ret}FS.staticInit();__ATINIT__.unshift((function(){if(!Module["noFSInit"]&&!FS.init.initialized)FS.init()}));__ATMAIN__.push((function(){FS.ignorePermissions=false}));__ATEXIT__.push((function(){FS.quit()}));__ATINIT__.unshift((function(){TTY.init()}));__ATEXIT__.push((function(){TTY.shutdown()}));if(ENVIRONMENT_IS_NODE){var fs=console.log("fs");var NODEJS_PATH=console.log("path");NODEFS.staticInit()}___buildEnvironment(ENV);DYNAMICTOP_PTR=staticAlloc(4);STACK_BASE=STACKTOP=alignMemory(STATICTOP);STACK_MAX=STACK_BASE+TOTAL_STACK;DYNAMIC_BASE=alignMemory(STACK_MAX);HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;staticSealed=true;var ASSERTIONS=false;function intArrayFromString(stringy,dontAddNull,length){var len=length>0?length:lengthBytesUTF8(stringy)+1;var u8array=new Array(len);var numBytesWritten=stringToUTF8Array(stringy,u8array,0,u8array.length);if(dontAddNull)u8array.length=numBytesWritten;return u8array}Module["wasmTableSize"]=876;Module["wasmMaxTableSize"]=876;function invoke_diiiii(index,a1,a2,a3,a4,a5){try{return Module["dynCall_diiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_diiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_diiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_fi(index,a1){try{return Module["dynCall_fi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_fii(index,a1,a2){try{return Module["dynCall_fii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_fiii(index,a1,a2,a3){try{return Module["dynCall_fiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_fiiifiifi(index,a1,a2,a3,a4,a5,a6,a7,a8){try{return Module["dynCall_fiiifiifi"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_fiiii(index,a1,a2,a3,a4){try{return Module["dynCall_fiiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_ii(index,a1){try{return Module["dynCall_ii"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iifi(index,a1,a2,a3){try{return Module["dynCall_iifi"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iii(index,a1,a2){try{return Module["dynCall_iii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiii(index,a1,a2,a3){try{return Module["dynCall_iiii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiii(index,a1,a2,a3,a4){try{return Module["dynCall_iiiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiid(index,a1,a2,a3,a4,a5){try{return Module["dynCall_iiiiid"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiii(index,a1,a2,a3,a4,a5){try{return Module["dynCall_iiiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiiid(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_iiiiiid"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiiii(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_iiiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiiiii(index,a1,a2,a3,a4,a5,a6,a7){try{return Module["dynCall_iiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiiiiii(index,a1,a2,a3,a4,a5,a6,a7,a8){try{return Module["dynCall_iiiiiiiii"](index,a1,a2,a3,a4,a5,a6,a7,a8)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_iiiiij(index,a1,a2,a3,a4,a5,a6){try{return Module["dynCall_iiiiij"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_v(index){try{Module["dynCall_v"](index)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_vi(index,a1){try{Module["dynCall_vi"](index,a1)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_vii(index,a1,a2){try{Module["dynCall_vii"](index,a1,a2)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viii(index,a1,a2,a3){try{Module["dynCall_viii"](index,a1,a2,a3)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viiii(index,a1,a2,a3,a4){try{Module["dynCall_viiii"](index,a1,a2,a3,a4)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viiiii(index,a1,a2,a3,a4,a5){try{Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}function invoke_viijii(index,a1,a2,a3,a4,a5,a6){try{Module["dynCall_viijii"](index,a1,a2,a3,a4,a5,a6)}catch(e){if(typeof e!=="number"&&e!=="longjmp")throw e;Module["setThrew"](1,0)}}Module.asmGlobalArg={};Module.asmLibraryArg={"abort":abort,"assert":assert,"enlargeMemory":enlargeMemory,"getTotalMemory":getTotalMemory,"abortOnCannotGrowMemory":abortOnCannotGrowMemory,"invoke_diiiii":invoke_diiiii,"invoke_diiiiii":invoke_diiiiii,"invoke_fi":invoke_fi,"invoke_fii":invoke_fii,"invoke_fiii":invoke_fiii,"invoke_fiiifiifi":invoke_fiiifiifi,"invoke_fiiii":invoke_fiiii,"invoke_ii":invoke_ii,"invoke_iifi":invoke_iifi,"invoke_iii":invoke_iii,"invoke_iiii":invoke_iiii,"invoke_iiiii":invoke_iiiii,"invoke_iiiiid":invoke_iiiiid,"invoke_iiiiii":invoke_iiiiii,"invoke_iiiiiid":invoke_iiiiiid,"invoke_iiiiiii":invoke_iiiiiii,"invoke_iiiiiiii":invoke_iiiiiiii,"invoke_iiiiiiiii":invoke_iiiiiiiii,"invoke_iiiiij":invoke_iiiiij,"invoke_v":invoke_v,"invoke_vi":invoke_vi,"invoke_vii":invoke_vii,"invoke_viii":invoke_viii,"invoke_viiii":invoke_viiii,"invoke_viiiii":invoke_viiiii,"invoke_viiiiii":invoke_viiiiii,"invoke_viijii":invoke_viijii,"__ZSt18uncaught_exceptionv":__ZSt18uncaught_exceptionv,"___assert_fail":___assert_fail,"___buildEnvironment":___buildEnvironment,"___cxa_allocate_exception":___cxa_allocate_exception,"___cxa_begin_catch":___cxa_begin_catch,"___cxa_find_matching_catch":___cxa_find_matching_catch,"___cxa_pure_virtual":___cxa_pure_virtual,"___cxa_throw":___cxa_throw,"___gxx_personality_v0":___gxx_personality_v0,"___lock":___lock,"___map_file":___map_file,"___resumeException":___resumeException,"___setErrNo":___setErrNo,"___syscall140":___syscall140,"___syscall145":___syscall145,"___syscall146":___syscall146,"___syscall54":___syscall54,"___syscall6":___syscall6,"___syscall91":___syscall91,"___unlock":___unlock,"__addDays":__addDays,"__arraySum":__arraySum,"__isLeapYear":__isLeapYear,"_abort":_abort,"_difftime":_difftime,"_emscripten_memcpy_big":_emscripten_memcpy_big,"_getenv":_getenv,"_llvm_bswap_i64":_llvm_bswap_i64,"_llvm_fabs_f32":_llvm_fabs_f32,"_llvm_fabs_f64":_llvm_fabs_f64,"_llvm_pow_f32":_llvm_pow_f32,"_llvm_pow_f64":_llvm_pow_f64,"_llvm_trap":_llvm_trap,"_pthread_cond_wait":_pthread_cond_wait,"_pthread_getspecific":_pthread_getspecific,"_pthread_key_create":_pthread_key_create,"_pthread_once":_pthread_once,"_pthread_setspecific":_pthread_setspecific,"_strftime":_strftime,"_strftime_l":_strftime_l,"_time":_time,"DYNAMICTOP_PTR":DYNAMICTOP_PTR,"tempDoublePtr":tempDoublePtr,"ABORT":ABORT,"STACKTOP":STACKTOP,"STACK_MAX":STACK_MAX};var asm=Module["asm"](Module.asmGlobalArg,Module.asmLibraryArg,buffer);Module["asm"]=asm;var __GLOBAL__I_000101=Module["__GLOBAL__I_000101"]=(function(){return Module["asm"]["__GLOBAL__I_000101"].apply(null,arguments)});var __GLOBAL__sub_I_bisMemoryManagement_cpp=Module["__GLOBAL__sub_I_bisMemoryManagement_cpp"]=(function(){return Module["asm"]["__GLOBAL__sub_I_bisMemoryManagement_cpp"].apply(null,arguments)});var __GLOBAL__sub_I_bisObject_cpp=Module["__GLOBAL__sub_I_bisObject_cpp"]=(function(){return Module["asm"]["__GLOBAL__sub_I_bisObject_cpp"].apply(null,arguments)});var __GLOBAL__sub_I_iostream_cpp=Module["__GLOBAL__sub_I_iostream_cpp"]=(function(){return Module["asm"]["__GLOBAL__sub_I_iostream_cpp"].apply(null,arguments)});var ___cxa_can_catch=Module["___cxa_can_catch"]=(function(){return Module["asm"]["___cxa_can_catch"].apply(null,arguments)});var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=(function(){return Module["asm"]["___cxa_is_pointer_type"].apply(null,arguments)});var ___errno_location=Module["___errno_location"]=(function(){return Module["asm"]["___errno_location"].apply(null,arguments)});var _addGridToImageWASM=Module["_addGridToImageWASM"]=(function(){return Module["asm"]["_addGridToImageWASM"].apply(null,arguments)});var _allocate_js_array=Module["_allocate_js_array"]=(function(){return Module["asm"]["_allocate_js_array"].apply(null,arguments)});var _approximateDisplacementFieldWASM=Module["_approximateDisplacementFieldWASM"]=(function(){return Module["asm"]["_approximateDisplacementFieldWASM"].apply(null,arguments)});var _approximateDisplacementFieldWASM2=Module["_approximateDisplacementFieldWASM2"]=(function(){return Module["asm"]["_approximateDisplacementFieldWASM2"].apply(null,arguments)});var _backProjectImageWASM=Module["_backProjectImageWASM"]=(function(){return Module["asm"]["_backProjectImageWASM"].apply(null,arguments)});var _blankImageWASM=Module["_blankImageWASM"]=(function(){return Module["asm"]["_blankImageWASM"].apply(null,arguments)});var _butterworthFilterImageWASM=Module["_butterworthFilterImageWASM"]=(function(){return Module["asm"]["_butterworthFilterImageWASM"].apply(null,arguments)});var _butterworthFilterWASM=Module["_butterworthFilterWASM"]=(function(){return Module["asm"]["_butterworthFilterWASM"].apply(null,arguments)});var _check_interpolation=Module["_check_interpolation"]=(function(){return Module["asm"]["_check_interpolation"].apply(null,arguments)});var _check_vectors=Module["_check_vectors"]=(function(){return Module["asm"]["_check_vectors"].apply(null,arguments)});var _clusterThresholdImageWASM=Module["_clusterThresholdImageWASM"]=(function(){return Module["asm"]["_clusterThresholdImageWASM"].apply(null,arguments)});var _computeCorrelationMatrixWASM=Module["_computeCorrelationMatrixWASM"]=(function(){return Module["asm"]["_computeCorrelationMatrixWASM"].apply(null,arguments)});var _computeDTIColorMapImageWASM=Module["_computeDTIColorMapImageWASM"]=(function(){return Module["asm"]["_computeDTIColorMapImageWASM"].apply(null,arguments)});var _computeDTITensorFitWASM=Module["_computeDTITensorFitWASM"]=(function(){return Module["asm"]["_computeDTITensorFitWASM"].apply(null,arguments)});var _computeDTITensorInvariantsWASM=Module["_computeDTITensorInvariantsWASM"]=(function(){return Module["asm"]["_computeDTITensorInvariantsWASM"].apply(null,arguments)});var _computeDisplacementFieldWASM=Module["_computeDisplacementFieldWASM"]=(function(){return Module["asm"]["_computeDisplacementFieldWASM"].apply(null,arguments)});var _computeGLMWASM=Module["_computeGLMWASM"]=(function(){return Module["asm"]["_computeGLMWASM"].apply(null,arguments)});var _computeMultiScaleIntrinsicResolutionWASM=Module["_computeMultiScaleIntrinsicResolutionWASM"]=(function(){return Module["asm"]["_computeMultiScaleIntrinsicResolutionWASM"].apply(null,arguments)});var _computeROIWASM=Module["_computeROIWASM"]=(function(){return Module["asm"]["_computeROIWASM"].apply(null,arguments)});var _createComboTransformationTextFileWASM=Module["_createComboTransformationTextFileWASM"]=(function(){return Module["asm"]["_createComboTransformationTextFileWASM"].apply(null,arguments)});var _createMatrixTextFileWASM=Module["_createMatrixTextFileWASM"]=(function(){return Module["asm"]["_createMatrixTextFileWASM"].apply(null,arguments)});var _cropImageWASM=Module["_cropImageWASM"]=(function(){return Module["asm"]["_cropImageWASM"].apply(null,arguments)});var _delete_all_memory=Module["_delete_all_memory"]=(function(){return Module["asm"]["_delete_all_memory"].apply(null,arguments)});var _emscripten_replace_memory=Module["_emscripten_replace_memory"]=(function(){return Module["asm"]["_emscripten_replace_memory"].apply(null,arguments)});var _extractImageFrameWASM=Module["_extractImageFrameWASM"]=(function(){return Module["asm"]["_extractImageFrameWASM"].apply(null,arguments)});var _extractImageSliceWASM=Module["_extractImageSliceWASM"]=(function(){return Module["asm"]["_extractImageSliceWASM"].apply(null,arguments)});var _flipImageWASM=Module["_flipImageWASM"]=(function(){return Module["asm"]["_flipImageWASM"].apply(null,arguments)});var _free=Module["_free"]=(function(){return Module["asm"]["_free"].apply(null,arguments)});var _gaussianSmoothImage1DWASM=Module["_gaussianSmoothImage1DWASM"]=(function(){return Module["asm"]["_gaussianSmoothImage1DWASM"].apply(null,arguments)});var _gaussianSmoothImage2DWASM=Module["_gaussianSmoothImage2DWASM"]=(function(){return Module["asm"]["_gaussianSmoothImage2DWASM"].apply(null,arguments)});var _gaussianSmoothImagePyramid1DWASM=Module["_gaussianSmoothImagePyramid1DWASM"]=(function(){return Module["asm"]["_gaussianSmoothImagePyramid1DWASM"].apply(null,arguments)});var _gaussianSmoothImageWASM=Module["_gaussianSmoothImageWASM"]=(function(){return Module["asm"]["_gaussianSmoothImageWASM"].apply(null,arguments)});var _getCollectionMagicCode=Module["_getCollectionMagicCode"]=(function(){return Module["asm"]["_getCollectionMagicCode"].apply(null,arguments)});var _getComboTransformMagicCode=Module["_getComboTransformMagicCode"]=(function(){return Module["asm"]["_getComboTransformMagicCode"].apply(null,arguments)});var _getGridTransformMagicCode=Module["_getGridTransformMagicCode"]=(function(){return Module["asm"]["_getGridTransformMagicCode"].apply(null,arguments)});var _getImageMagicCode=Module["_getImageMagicCode"]=(function(){return Module["asm"]["_getImageMagicCode"].apply(null,arguments)});var _getMatrixMagicCode=Module["_getMatrixMagicCode"]=(function(){return Module["asm"]["_getMatrixMagicCode"].apply(null,arguments)});var _getVectorMagicCode=Module["_getVectorMagicCode"]=(function(){return Module["asm"]["_getVectorMagicCode"].apply(null,arguments)});var _gradientImageWASM=Module["_gradientImageWASM"]=(function(){return Module["asm"]["_gradientImageWASM"].apply(null,arguments)});var _jsdel_array=Module["_jsdel_array"]=(function(){return Module["asm"]["_jsdel_array"].apply(null,arguments)});var _llvm_bswap_i32=Module["_llvm_bswap_i32"]=(function(){return Module["asm"]["_llvm_bswap_i32"].apply(null,arguments)});var _malloc=Module["_malloc"]=(function(){return Module["asm"]["_malloc"].apply(null,arguments)});var _memcpy=Module["_memcpy"]=(function(){return Module["asm"]["_memcpy"].apply(null,arguments)});var _memmove=Module["_memmove"]=(function(){return Module["asm"]["_memmove"].apply(null,arguments)});var _memset=Module["_memset"]=(function(){return Module["asm"]["_memset"].apply(null,arguments)});var _morphologyOperationWASM=Module["_morphologyOperationWASM"]=(function(){return Module["asm"]["_morphologyOperationWASM"].apply(null,arguments)});var _niftiMat44ToQuaternionWASM=Module["_niftiMat44ToQuaternionWASM"]=(function(){return Module["asm"]["_niftiMat44ToQuaternionWASM"].apply(null,arguments)});var _normalizeImageWASM=Module["_normalizeImageWASM"]=(function(){return Module["asm"]["_normalizeImageWASM"].apply(null,arguments)});var _parseComboTransformTextFileWASM=Module["_parseComboTransformTextFileWASM"]=(function(){return Module["asm"]["_parseComboTransformTextFileWASM"].apply(null,arguments)});var _parseMatlabV6WASM=Module["_parseMatlabV6WASM"]=(function(){return Module["asm"]["_parseMatlabV6WASM"].apply(null,arguments)});var _parseMatrixTextFileWASM=Module["_parseMatrixTextFileWASM"]=(function(){return Module["asm"]["_parseMatrixTextFileWASM"].apply(null,arguments)});var _prepareImageForRegistrationWASM=Module["_prepareImageForRegistrationWASM"]=(function(){return Module["asm"]["_prepareImageForRegistrationWASM"].apply(null,arguments)});var _print_memory=Module["_print_memory"]=(function(){return Module["asm"]["_print_memory"].apply(null,arguments)});var _projectImageWASM=Module["_projectImageWASM"]=(function(){return Module["asm"]["_projectImageWASM"].apply(null,arguments)});var _pthread_cond_broadcast=Module["_pthread_cond_broadcast"]=(function(){return Module["asm"]["_pthread_cond_broadcast"].apply(null,arguments)});var _pthread_mutex_lock=Module["_pthread_mutex_lock"]=(function(){return Module["asm"]["_pthread_mutex_lock"].apply(null,arguments)});var _pthread_mutex_unlock=Module["_pthread_mutex_unlock"]=(function(){return Module["asm"]["_pthread_mutex_unlock"].apply(null,arguments)});var _redirect_stdout=Module["_redirect_stdout"]=(function(){return Module["asm"]["_redirect_stdout"].apply(null,arguments)});var _regularizeObjectmapWASM=Module["_regularizeObjectmapWASM"]=(function(){return Module["asm"]["_regularizeObjectmapWASM"].apply(null,arguments)});var _resampleImageWASM=Module["_resampleImageWASM"]=(function(){return Module["asm"]["_resampleImageWASM"].apply(null,arguments)});var _resliceImageWASM=Module["_resliceImageWASM"]=(function(){return Module["asm"]["_resliceImageWASM"].apply(null,arguments)});var _runLinearRegistrationWASM=Module["_runLinearRegistrationWASM"]=(function(){return Module["asm"]["_runLinearRegistrationWASM"].apply(null,arguments)});var _runNonLinearRegistrationWASM=Module["_runNonLinearRegistrationWASM"]=(function(){return Module["asm"]["_runNonLinearRegistrationWASM"].apply(null,arguments)});var _sbrk=Module["_sbrk"]=(function(){return Module["asm"]["_sbrk"].apply(null,arguments)});var _seedConnectivityWASM=Module["_seedConnectivityWASM"]=(function(){return Module["asm"]["_seedConnectivityWASM"].apply(null,arguments)});var _segmentImageWASM=Module["_segmentImageWASM"]=(function(){return Module["asm"]["_segmentImageWASM"].apply(null,arguments)});var _set_debug_memory_mode=Module["_set_debug_memory_mode"]=(function(){return Module["asm"]["_set_debug_memory_mode"].apply(null,arguments)});var _shiftScaleImageWASM=Module["_shiftScaleImageWASM"]=(function(){return Module["asm"]["_shiftScaleImageWASM"].apply(null,arguments)});var _sliceBiasFieldCorrectImageWASM=Module["_sliceBiasFieldCorrectImageWASM"]=(function(){return Module["asm"]["_sliceBiasFieldCorrectImageWASM"].apply(null,arguments)});var _test_PTZConversions=Module["_test_PTZConversions"]=(function(){return Module["asm"]["_test_PTZConversions"].apply(null,arguments)});var _test_bendingEnergy=Module["_test_bendingEnergy"]=(function(){return Module["asm"]["_test_bendingEnergy"].apply(null,arguments)});var _test_compute_histo_metric=Module["_test_compute_histo_metric"]=(function(){return Module["asm"]["_test_compute_histo_metric"].apply(null,arguments)});var _test_create_4x4matrix=Module["_test_create_4x4matrix"]=(function(){return Module["asm"]["_test_create_4x4matrix"].apply(null,arguments)});var _test_eigenUtilOperations=Module["_test_eigenUtilOperations"]=(function(){return Module["asm"]["_test_eigenUtilOperations"].apply(null,arguments)});var _test_eigenUtils=Module["_test_eigenUtils"]=(function(){return Module["asm"]["_test_eigenUtils"].apply(null,arguments)});var _test_matlabParse=Module["_test_matlabParse"]=(function(){return Module["asm"]["_test_matlabParse"].apply(null,arguments)});var _test_matrix4x4=Module["_test_matrix4x4"]=(function(){return Module["asm"]["_test_matrix4x4"].apply(null,arguments)});var _test_mirrorComboTransformTextFileWASM=Module["_test_mirrorComboTransformTextFileWASM"]=(function(){return Module["asm"]["_test_mirrorComboTransformTextFileWASM"].apply(null,arguments)});var _test_optimizer=Module["_test_optimizer"]=(function(){return Module["asm"]["_test_optimizer"].apply(null,arguments)});var _test_wasm=Module["_test_wasm"]=(function(){return Module["asm"]["_test_wasm"].apply(null,arguments)});var _thresholdImageWASM=Module["_thresholdImageWASM"]=(function(){return Module["asm"]["_thresholdImageWASM"].apply(null,arguments)});var _uses_gpl=Module["_uses_gpl"]=(function(){return Module["asm"]["_uses_gpl"].apply(null,arguments)});var _weightedRegressGlobalSignalWASM=Module["_weightedRegressGlobalSignalWASM"]=(function(){return Module["asm"]["_weightedRegressGlobalSignalWASM"].apply(null,arguments)});var _weightedRegressOutWASM=Module["_weightedRegressOutWASM"]=(function(){return Module["asm"]["_weightedRegressOutWASM"].apply(null,arguments)});var establishStackSpace=Module["establishStackSpace"]=(function(){return Module["asm"]["establishStackSpace"].apply(null,arguments)});var getTempRet0=Module["getTempRet0"]=(function(){return Module["asm"]["getTempRet0"].apply(null,arguments)});var runPostSets=Module["runPostSets"]=(function(){return Module["asm"]["runPostSets"].apply(null,arguments)});var setTempRet0=Module["setTempRet0"]=(function(){return Module["asm"]["setTempRet0"].apply(null,arguments)});var setThrew=Module["setThrew"]=(function(){return Module["asm"]["setThrew"].apply(null,arguments)});var stackAlloc=Module["stackAlloc"]=(function(){return Module["asm"]["stackAlloc"].apply(null,arguments)});var stackRestore=Module["stackRestore"]=(function(){return Module["asm"]["stackRestore"].apply(null,arguments)});var stackSave=Module["stackSave"]=(function(){return Module["asm"]["stackSave"].apply(null,arguments)});var dynCall_diiiii=Module["dynCall_diiiii"]=(function(){return Module["asm"]["dynCall_diiiii"].apply(null,arguments)});var dynCall_diiiiii=Module["dynCall_diiiiii"]=(function(){return Module["asm"]["dynCall_diiiiii"].apply(null,arguments)});var dynCall_fi=Module["dynCall_fi"]=(function(){return Module["asm"]["dynCall_fi"].apply(null,arguments)});var dynCall_fii=Module["dynCall_fii"]=(function(){return Module["asm"]["dynCall_fii"].apply(null,arguments)});var dynCall_fiii=Module["dynCall_fiii"]=(function(){return Module["asm"]["dynCall_fiii"].apply(null,arguments)});var dynCall_fiiifiifi=Module["dynCall_fiiifiifi"]=(function(){return Module["asm"]["dynCall_fiiifiifi"].apply(null,arguments)});var dynCall_fiiii=Module["dynCall_fiiii"]=(function(){return Module["asm"]["dynCall_fiiii"].apply(null,arguments)});var dynCall_ii=Module["dynCall_ii"]=(function(){return Module["asm"]["dynCall_ii"].apply(null,arguments)});var dynCall_iifi=Module["dynCall_iifi"]=(function(){return Module["asm"]["dynCall_iifi"].apply(null,arguments)});var dynCall_iii=Module["dynCall_iii"]=(function(){return Module["asm"]["dynCall_iii"].apply(null,arguments)});var dynCall_iiii=Module["dynCall_iiii"]=(function(){return Module["asm"]["dynCall_iiii"].apply(null,arguments)});var dynCall_iiiii=Module["dynCall_iiiii"]=(function(){return Module["asm"]["dynCall_iiiii"].apply(null,arguments)});var dynCall_iiiiid=Module["dynCall_iiiiid"]=(function(){return Module["asm"]["dynCall_iiiiid"].apply(null,arguments)});var dynCall_iiiiii=Module["dynCall_iiiiii"]=(function(){return Module["asm"]["dynCall_iiiiii"].apply(null,arguments)});var dynCall_iiiiiid=Module["dynCall_iiiiiid"]=(function(){return Module["asm"]["dynCall_iiiiiid"].apply(null,arguments)});var dynCall_iiiiiii=Module["dynCall_iiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiii"].apply(null,arguments)});var dynCall_iiiiiiii=Module["dynCall_iiiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiiii"].apply(null,arguments)});var dynCall_iiiiiiiii=Module["dynCall_iiiiiiiii"]=(function(){return Module["asm"]["dynCall_iiiiiiiii"].apply(null,arguments)});var dynCall_iiiiij=Module["dynCall_iiiiij"]=(function(){return Module["asm"]["dynCall_iiiiij"].apply(null,arguments)});var dynCall_v=Module["dynCall_v"]=(function(){return Module["asm"]["dynCall_v"].apply(null,arguments)});var dynCall_vi=Module["dynCall_vi"]=(function(){return Module["asm"]["dynCall_vi"].apply(null,arguments)});var dynCall_vii=Module["dynCall_vii"]=(function(){return Module["asm"]["dynCall_vii"].apply(null,arguments)});var dynCall_viii=Module["dynCall_viii"]=(function(){return Module["asm"]["dynCall_viii"].apply(null,arguments)});var dynCall_viiii=Module["dynCall_viiii"]=(function(){return Module["asm"]["dynCall_viiii"].apply(null,arguments)});var dynCall_viiiii=Module["dynCall_viiiii"]=(function(){return Module["asm"]["dynCall_viiiii"].apply(null,arguments)});var dynCall_viiiiii=Module["dynCall_viiiiii"]=(function(){return Module["asm"]["dynCall_viiiiii"].apply(null,arguments)});var dynCall_viijii=Module["dynCall_viijii"]=(function(){return Module["asm"]["dynCall_viijii"].apply(null,arguments)});Module["asm"]=asm;function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;var initialStackTop;dependenciesFulfilled=function runCaller(){if(!Module["calledRun"])run();if(!Module["calledRun"])dependenciesFulfilled=runCaller};function run(args){args=args||Module["arguments"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module["calledRun"])return;function doRun(){if(Module["calledRun"])return;Module["calledRun"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun()}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout((function(){setTimeout((function(){Module["setStatus"]("")}),1);doRun()}),1)}else{doRun()}}Module["run"]=run;function exit(status,implicit){if(implicit&&Module["noExitRuntime"]&&status===0){return}if(Module["noExitRuntime"]){}else{ABORT=true;EXITSTATUS=status;STACKTOP=initialStackTop;exitRuntime();if(Module["onExit"])Module["onExit"](status)}if(ENVIRONMENT_IS_NODE){process["exit"](status)}Module["quit"](status,new ExitStatus(status))}Module["exit"]=exit;function abort(what){if(Module["onAbort"]){Module["onAbort"](what)}if(what!==undefined){Module.print(what);Module.printErr(what);what=JSON.stringify(what)}else{what=""}ABORT=true;EXITSTATUS=1;throw"abort("+what+"). Build with -s ASSERTIONS=1 for more info."}Module["abort"]=abort;if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()()}}Module["noExitRuntime"]=true;run();Module["ccall"]=ccall;return Module});var web_load=(function(callback,wasmname,binary){binary=binary||false;if(binary!==false)return bis_create_wasm_module(callback,wasmname,binary,"Browser");return bis_create_wasm_module(callback,"./libbiswasm.wasm",binary,"Browser")});var worker_load=(function(callback,wasmname,binary){binary=binary||false;if(binary!==false)return bis_create_wasm_module(callback,wasmname,binary,"WebWorker");return bis_create_wasm_module(callback,"./libbiswasm.wasm",binary,"WebWorker")});if(typeof WorkerGlobalScope!=="undefined"){biswasm_initialize_function=worker_load}else if(typeof window!=="undefined"){biswasm_initialize_function=web_load}else{biswasm_initialize_function=bis_create_wasm_module}}))();
    const bioimagesuitewasmpack= {
        binary: "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",
        date : "2019/01/21, 10:46:53",
        filename : "external js module: libbiswasm.js",
        initialize : biswasm_initialize_function,
    };

    if (typeof module !== "undefined" && module.exports) {
        module.exports = bioimagesuitewasmpack;
    } else {
        window.bioimagesuitewasmpack=bioimagesuitewasmpack;
    }
})();
